{
  "swagger": "2.0",
  "info": {
    "version": "V1",
    "title": "APIWayworks",
    "x-swagger-net-version": "8.5.12.001"
  },
  "host": "freeofficeapi.gvbsoft.vn",
  "schemes": [
    "http"
  ],
  "paths": {
    "/api/authentication/getauthdata": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "operationId": "Authentication_GetAuthenticationData",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/authentication/login": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "operationId": "Authentication_Login",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserLoginModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/authentication/logout": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "operationId": "Authentication_Logout",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/authentication/switchcompany/{companyID}": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "operationId": "Authentication_SwitchCompany",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "companyID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/authentication/validtoken": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "operationId": "Authentication_IsValidAccessToken",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/authentication/getlistusertypes": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "operationId": "Authentication_GetListUserTypes",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/authentication/resetpassword": {
      "put": {
        "tags": [
          "Authentication"
        ],
        "operationId": "Authentication_ResetPassword",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ResetPasswordModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/authentication/changepassword": {
      "put": {
        "tags": [
          "Authentication"
        ],
        "operationId": "Authentication_ChangePassword",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ChangePasswordModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/billadvances/createbilladvances": {
      "post": {
        "tags": [
          "BillAdvances"
        ],
        "operationId": "BillAdvances_CreateBillAdvances",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateBillAdvancesModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/billadvances/getbilladvancesbyid/{BillAdvanceID}": {
      "get": {
        "tags": [
          "BillAdvances"
        ],
        "operationId": "BillAdvances_GetBillAdvancesByID",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "BillAdvanceID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/billadvances/updatebilladvances/{BillAdvanceID}": {
      "post": {
        "tags": [
          "BillAdvances"
        ],
        "operationId": "BillAdvances_PutUpdateBillAdvances",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "BillAdvanceID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateBillAdvancesModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/billadvances/listbilladvances": {
      "get": {
        "tags": [
          "BillAdvances"
        ],
        "operationId": "BillAdvances_GetListBillAdvances",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "ToDoListsMilestoneID",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/billadvances/deletebilladvance/{BillAdvanceID}": {
      "delete": {
        "tags": [
          "BillAdvances"
        ],
        "operationId": "BillAdvances_DeleteBillAdvance",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "BillAdvanceID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/billrefunds/createbillrefunds": {
      "post": {
        "tags": [
          "BillRefunds"
        ],
        "operationId": "BillRefunds_CreateBillAdvances",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateBillRefundModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/billrefunds/getbillrefundsbyid/{BillRefundID}": {
      "get": {
        "tags": [
          "BillRefunds"
        ],
        "operationId": "BillRefunds_GetBillAdvancesByID",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "BillRefundID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/billrefunds/updatebillrefunds/{BillRefundID}": {
      "post": {
        "tags": [
          "BillRefunds"
        ],
        "operationId": "BillRefunds_PutUpdateBillAdvances",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "BillRefundID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateBillRefundModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/billrefunds/listbillrefunds": {
      "get": {
        "tags": [
          "BillRefunds"
        ],
        "operationId": "BillRefunds_GetListBillAdvances",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "ToDoListsMilestoneID",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/billrefunds/deletebillrefund/{BillRefundID}": {
      "delete": {
        "tags": [
          "BillRefunds"
        ],
        "operationId": "BillRefunds_DeleteBillRefund",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "BillRefundID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/booking/getlistbookingcategory": {
      "get": {
        "tags": [
          "BookingCategory"
        ],
        "operationId": "BookingCategory_GetListBookingCategorys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/booking/getbookingcategorybyid/{categoryNewsID}": {
      "get": {
        "tags": [
          "BookingCategory"
        ],
        "operationId": "BookingCategory_GetBookingCategoryByID",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "categoryNewsID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/booking/createbookingcategory": {
      "post": {
        "tags": [
          "BookingCategory"
        ],
        "operationId": "BookingCategory_CreateBookingCategory",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BookingCategoryModelCreate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/booking/updatebookingcategory/{categoryNewsID}": {
      "put": {
        "tags": [
          "BookingCategory"
        ],
        "operationId": "BookingCategory_UpdateBookingCategory",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "categoryNewsID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BookingCategoryModelUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/booking/deletebookingcategory/{categoryNewsID}": {
      "put": {
        "tags": [
          "BookingCategory"
        ],
        "operationId": "BookingCategory_DeteteBookingCategory",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "categoryNewsID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/bookingeventcategory/getlistcategorybyeventid/{eventID}": {
      "get": {
        "tags": [
          "BookingEventCategory"
        ],
        "operationId": "BookingEventCategory_GetListCategoryByEventID",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "eventID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/bookingeventcategory/searchavailablebookingcategories": {
      "get": {
        "tags": [
          "BookingEventCategory"
        ],
        "operationId": "BookingEventCategory_SearchListAvailableBookingCategories",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "timeStart",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "timeEnd",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/bookingeventcategory/searchcategorybeingusing": {
      "get": {
        "tags": [
          "BookingEventCategory"
        ],
        "operationId": "BookingEventCategory_SearchCategoryBeingUsing",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "timeStart",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "timeEnd",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/bookingeventcategory/addcategoryintoevent/{eventID}/{categoryID}": {
      "post": {
        "tags": [
          "BookingEventCategory"
        ],
        "operationId": "BookingEventCategory_AddCategoryIntoEvent",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "eventID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "categoryID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/bookingeventcategory/deletebookingeventcategory/{eventID}/{categoryID}": {
      "post": {
        "tags": [
          "BookingEventCategory"
        ],
        "operationId": "BookingEventCategory_DeleteBookingCategory",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "eventID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "categoryID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/bookingevent/searchlistmyevents": {
      "get": {
        "tags": [
          "BookingEvents"
        ],
        "operationId": "BookingEvents_SearchListMyBookingEvents",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "timeStart",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "timeEnd",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "titleSearch",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "strCategoryIDs",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/bookingevent/getlistbookingpresentcontinue": {
      "get": {
        "tags": [
          "BookingEvents"
        ],
        "operationId": "BookingEvents_GetListBookingPresentContinue",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "timeStart",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/bookingevent/searchlistcompanyevents": {
      "get": {
        "tags": [
          "BookingEvents"
        ],
        "operationId": "BookingEvents_SearchListCompanyBookingEvents",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "timeStart",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "timeEnd",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "titleSearch",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "strCategoryIDs",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/bookingeventattendance/searchbookedtimeperiods": {
      "get": {
        "tags": [
          "BookingEvents"
        ],
        "operationId": "BookingEvents_SearchListBookedTimePeriods",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "timeStart",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "timeEnd",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "strCategoryIDs",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/bookingevent/getbyid/{eventID}": {
      "get": {
        "tags": [
          "BookingEvents"
        ],
        "operationId": "BookingEvents_GetBookingEventByID",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "eventID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/bookingevent/create": {
      "post": {
        "tags": [
          "BookingEvents"
        ],
        "operationId": "BookingEvents_CreateBookingEvent",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "bodyData",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BookingEventModelCreate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/bookingevent/update/{eventID}": {
      "put": {
        "tags": [
          "BookingEvents"
        ],
        "operationId": "BookingEvents_UpdateBookingEvent",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "eventID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "bodyData",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BookingEventModelUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/bookingevent/delete/{eventID}": {
      "put": {
        "tags": [
          "BookingEvents"
        ],
        "operationId": "BookingEvents_DeleteBookingTypeEvent",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "eventID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/bookingeventattendance/searchlist/{eventID}": {
      "get": {
        "tags": [
          "BookingEventsAttendance"
        ],
        "operationId": "BookingEventsAttendance_SearchListBookingEventsAttendance",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "eventID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/bookingeventattendance/getbyid/{attendanceID}": {
      "get": {
        "tags": [
          "BookingEventsAttendance"
        ],
        "operationId": "BookingEventsAttendance_GetBookingEventAttendanceByID",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "attendanceID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/bookingeventattendance/searchavailableattendances": {
      "get": {
        "tags": [
          "BookingEventsAttendance"
        ],
        "operationId": "BookingEventsAttendance_SearchListAvailableAttendances",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "timeStart",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "timeEnd",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "keySearch",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/bookingeventattendance/create/{eventID}": {
      "post": {
        "tags": [
          "BookingEventsAttendance"
        ],
        "operationId": "BookingEventsAttendance_CreateBookingEventAttendance",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "eventID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "bodyData",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BookingEventAttendanceModelCreate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/bookingeventattendance/confirm/{eventID}": {
      "put": {
        "tags": [
          "BookingEventsAttendance"
        ],
        "operationId": "BookingEventsAttendance_ConfirmBookingEventAttendance",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "eventID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "bodyData",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BookingEventAttendanceModelUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/bookingeventattendance/delete/{eventID}/{staffID}": {
      "put": {
        "tags": [
          "BookingEventsAttendance"
        ],
        "operationId": "BookingEventsAttendance_DeleteBookingEventAttendance",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "eventID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "staffID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/bookingtypeevent/searchlist": {
      "get": {
        "tags": [
          "BookingTypeEvent"
        ],
        "operationId": "BookingTypeEvent_SearchListBookingTypeEvents",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/bookingtypeevent/getbyid/{eventTypeID}": {
      "get": {
        "tags": [
          "BookingTypeEvent"
        ],
        "operationId": "BookingTypeEvent_GetBookingTypeEventByID",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "eventTypeID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/bookingtypeevent/create": {
      "post": {
        "tags": [
          "BookingTypeEvent"
        ],
        "operationId": "BookingTypeEvent_CreateBookingTypeEvent",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "bodyData",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BookingTypeEventModelCreate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/bookingtypeevent/update/{eventTypeID}": {
      "put": {
        "tags": [
          "BookingTypeEvent"
        ],
        "operationId": "BookingTypeEvent_UpdateBookingTypeEvent",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "eventTypeID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "bodyData",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BookingTypeEventModelUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/bookingtypeevent/delete/{eventTypeID}": {
      "put": {
        "tags": [
          "BookingTypeEvent"
        ],
        "operationId": "BookingTypeEvent_DeleteBookingTypeEvent",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "eventTypeID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/cmscategorynews/listcategorynews": {
      "get": {
        "tags": [
          "CMSCategoryNews"
        ],
        "operationId": "CMSCategoryNews_GetListCategoryNews",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/cmscategorynews/getcategorynewsbyid/{categoryNewsID}": {
      "get": {
        "tags": [
          "CMSCategoryNews"
        ],
        "operationId": "CMSCategoryNews_GetCategoryNewsByID",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "categoryNewsID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/cmscategorynews/createcategorynews": {
      "post": {
        "tags": [
          "CMSCategoryNews"
        ],
        "operationId": "CMSCategoryNews_CreateCategoryNews",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CMSCategoryNewsModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/cmscategorynews/updatecategorynews/{categoryNewsID}": {
      "put": {
        "tags": [
          "CMSCategoryNews"
        ],
        "operationId": "CMSCategoryNews_UpdateCategoryNews",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "categoryNewsID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "dataUpdate",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CMSCategoryNewsModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/cmscategorynews/deletecategorynews/{categoryNewsID}": {
      "put": {
        "tags": [
          "CMSCategoryNews"
        ],
        "operationId": "CMSCategoryNews_DeleteCategoryNews",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "categoryNewsID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/cmscontenttype/listcontenttypes": {
      "get": {
        "tags": [
          "CMSContentType"
        ],
        "operationId": "CMSContentType_GetListContentTypes",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "keySearch",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/cmsnews/listnews": {
      "get": {
        "tags": [
          "CMSNews"
        ],
        "operationId": "CMSNews_getListNewsForCompany",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "categoryNewsID",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "keySearch",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "statusID",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/cmsnews/getnewsbyid/{newsID}": {
      "get": {
        "tags": [
          "CMSNews"
        ],
        "operationId": "CMSNews_GetNewsByID",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "newsID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/cmsnews/createnews": {
      "post": {
        "tags": [
          "CMSNews"
        ],
        "operationId": "CMSNews_CreateNews",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CMSNewsModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/cmsnews/updatenews/{newsID}": {
      "put": {
        "tags": [
          "CMSNews"
        ],
        "operationId": "CMSNews_UpdateNews",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "newsID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "dataUpdate",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CMSNewsModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/cmsnews/deletenews/{newsID}": {
      "put": {
        "tags": [
          "CMSNews"
        ],
        "operationId": "CMSNews_DeleteNews",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "newsID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/cmsnews/addattachment/{newsID}": {
      "put": {
        "tags": [
          "CMSNews"
        ],
        "operationId": "CMSNews_AddAttachment",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "newsID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "bodyData",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RequestAttachmentModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/cmsnews/removeattachment/{attachmentID}": {
      "put": {
        "tags": [
          "CMSNews"
        ],
        "operationId": "CMSNews_RemoveCMSNewsAttachment",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "attachmentID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/cmsnews/updatestatusattachment": {
      "put": {
        "tags": [
          "CMSNews"
        ],
        "operationId": "CMSNews_UpdateStatusAttachment",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "newsID",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "attachmentID",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/cmsnews/getlistfileattachmentbyid/{newsID}": {
      "get": {
        "tags": [
          "CMSNews"
        ],
        "operationId": "CMSNews_GetListFileAttachmentDispathDoccument",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "newsID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/pricing/getcurrentpackage/{companyID}": {
      "get": {
        "tags": [
          "CompanyPricePackage"
        ],
        "operationId": "CompanyPricePackage_GetCurrentPackageByCompany",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "companyID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/pricing/getcurrentpackage": {
      "get": {
        "tags": [
          "CompanyPricePackage"
        ],
        "operationId": "CompanyPricePackage_GetCurrentPackage",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/pricing/searchpackages/{companyID}": {
      "get": {
        "tags": [
          "CompanyPricePackage"
        ],
        "operationId": "CompanyPricePackage_SearchCompanyPackages",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "companyID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/pricing/createpackage/{companyID}": {
      "post": {
        "tags": [
          "CompanyPricePackage"
        ],
        "operationId": "CompanyPricePackage_CreateCompanyPackage",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "companyID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CompanyPricePackageModelCreate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/pricing/updatepackage/{companyID}": {
      "put": {
        "tags": [
          "CompanyPricePackage"
        ],
        "operationId": "CompanyPricePackage_UpdateCompanyPackage",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "companyID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CompanyPricePackageModelUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/pricing/allownewupload": {
      "get": {
        "tags": [
          "CompanyPricePackage"
        ],
        "operationId": "CompanyPricePackage_AllowNewUpload",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "fileSize",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/pricing/checkprice": {
      "post": {
        "tags": [
          "CompanyPricePackage"
        ],
        "operationId": "CompanyPricePackage_CheckPackagePrice",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CompanyPricePackageModelCreate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/companys/getcompanyusagedata/{companyID}": {
      "get": {
        "tags": [
          "Companys"
        ],
        "operationId": "Companys_GetCompanyUsageData",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "companyID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/companys/ownerregistercompanyaccount": {
      "post": {
        "tags": [
          "Companys"
        ],
        "operationId": "Companys_RegisterCompanyAccountFromOwner",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CompanyRegisterModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/companys/registercompanyaccount": {
      "post": {
        "tags": [
          "Companys"
        ],
        "operationId": "Companys_RegisterCompanyAccountFromWay",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CompanyRegisterModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/companys/count": {
      "get": {
        "tags": [
          "Companys"
        ],
        "operationId": "Companys_GetTotalCompanys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/companys/listcompany": {
      "get": {
        "tags": [
          "Companys"
        ],
        "operationId": "Companys_GetListCompany",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "keySearch",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "statusID",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/companys/getlistservicesbycompanyid/{companyID}": {
      "get": {
        "tags": [
          "Companys"
        ],
        "operationId": "Companys_GetRegisteredServicesByCompanyID",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "companyID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/companys/toggleservicebycompanyid/{serviceID}/{companyID}": {
      "put": {
        "tags": [
          "Companys"
        ],
        "operationId": "Companys_ToggleServiceForCompany",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "serviceID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "companyID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/companys/getdropdownlist": {
      "get": {
        "tags": [
          "Companys"
        ],
        "operationId": "Companys_GetDropdownListCompanies",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/companys/mycompany/getlistservices": {
      "get": {
        "tags": [
          "Companys"
        ],
        "operationId": "Companys_GetCompanyRegisteredServices",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/companys/mycompany/toggleservice/{serviceID}": {
      "post": {
        "tags": [
          "Companys"
        ],
        "operationId": "Companys_ToggleCompanyService",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "serviceID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/companys/mycompany": {
      "get": {
        "tags": [
          "Companys"
        ],
        "operationId": "Companys_GetMyCompany",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/companys/companybyid/{companyID}": {
      "get": {
        "tags": [
          "Companys"
        ],
        "operationId": "Companys_GetCompanyByID",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "companyID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/companys/createcompany": {
      "post": {
        "tags": [
          "Companys"
        ],
        "operationId": "Companys_PostCreateCompany",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CompanyModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/companys/updatecompany/{companyID}": {
      "put": {
        "tags": [
          "Companys"
        ],
        "operationId": "Companys_PutUpdateCompany",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "companyID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CompanyModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/companys/updatestatuscompany/{companyID}": {
      "put": {
        "tags": [
          "Companys"
        ],
        "operationId": "Companys_PutUpdateStatusCompany",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "companyID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/companys/search": {
      "post": {
        "tags": [
          "Companys"
        ],
        "operationId": "Companys_SearchCompany",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "keyword",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/Companys/{id}": {
      "delete": {
        "tags": [
          "Companys"
        ],
        "operationId": "Companys_Delete",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/companyservices/count": {
      "get": {
        "tags": [
          "CompanyService"
        ],
        "operationId": "CompanyService_GetTotalCompanyServices",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/companyservices/listcompanyservice": {
      "get": {
        "tags": [
          "CompanyService"
        ],
        "operationId": "CompanyService_GetListCompanyServices",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "statusID",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/companyservices/companyservicebyid/{companyserviceID}": {
      "get": {
        "tags": [
          "CompanyService"
        ],
        "operationId": "CompanyService_GetCompanyServicesByID",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "companyserviceID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/companyservices/createcompanyservice": {
      "post": {
        "tags": [
          "CompanyService"
        ],
        "operationId": "CompanyService_PostCreateCompanyService",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CompanyServices"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/companyservices/updatecompanyservice/{companyserviceID}": {
      "put": {
        "tags": [
          "CompanyService"
        ],
        "operationId": "CompanyService_UpdateCompanyService",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "companyserviceID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CompanyServicesModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/configs/listconfigs": {
      "get": {
        "tags": [
          "Config"
        ],
        "operationId": "Config_GetListConfigs",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "companyID",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "searchTerm",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/configs/searchconfigdetail/{configKey}": {
      "get": {
        "tags": [
          "Config"
        ],
        "operationId": "Config_SearchConfigDetail",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "configKey",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "companyID",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/configs/createconfig": {
      "post": {
        "tags": [
          "Config"
        ],
        "operationId": "Config_CreateDefaultConfig",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConfigsModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/configs/updateconfig": {
      "put": {
        "tags": [
          "Config"
        ],
        "operationId": "Config_UpdateConfig",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConfigsModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/configs/deleteconfig/{configKey}": {
      "put": {
        "tags": [
          "Config"
        ],
        "operationId": "Config_DeleteConfig",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "configKey",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "companyID",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/contracts/search-drop-down-list": {
      "get": {
        "tags": [
          "Contract"
        ],
        "operationId": "Contract_SearchDropdownList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "keySearch",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "statusID",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/contracts/list-contract": {
      "get": {
        "tags": [
          "Contract"
        ],
        "operationId": "Contract_ListContract",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "keySearch",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "statusID",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/contracts/get-list-contract-by-manager/{userIDManager}": {
      "get": {
        "tags": [
          "Contract"
        ],
        "operationId": "Contract_GetListContractByUserManager",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "userIDManager",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/contracts/drop-down-list-contract": {
      "get": {
        "tags": [
          "Contract"
        ],
        "operationId": "Contract_GetDropDownListContract",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/contracts/customer-by-id/{contractID}": {
      "get": {
        "tags": [
          "Contract"
        ],
        "operationId": "Contract_getContractByID",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "contractID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/contracts/create-contract": {
      "post": {
        "tags": [
          "Contract"
        ],
        "operationId": "Contract_CreateContract",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Contracts"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/contracts/update-contract/{contractID}": {
      "put": {
        "tags": [
          "Contract"
        ],
        "operationId": "Contract_UpdateContract",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "contractID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Contracts"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/contracts/update-status-contract/{contractID}": {
      "put": {
        "tags": [
          "Contract"
        ],
        "operationId": "Contract_UpdateStatusContract",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "contractID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/contracts/search": {
      "get": {
        "tags": [
          "Contract"
        ],
        "operationId": "Contract_SearchContract",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "keyword",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/contracts/getcontractcost": {
      "get": {
        "tags": [
          "Contract"
        ],
        "operationId": "Contract_GetContractCost",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "DateStart",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "DateEnd",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/contracts/getcontractcostfile": {
      "get": {
        "tags": [
          "Contract"
        ],
        "operationId": "Contract_GetContractCostFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "DateStart",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "DateEnd",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/customers/search-drop-down-list": {
      "get": {
        "tags": [
          "Customer"
        ],
        "operationId": "Customer_SearchDropdownList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "keySearch",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "statusID",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/customers/list-customer": {
      "get": {
        "tags": [
          "Customer"
        ],
        "operationId": "Customer_ListCustomer",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "keySearch",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "statusID",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/customers/drop-down-list-customer": {
      "get": {
        "tags": [
          "Customer"
        ],
        "operationId": "Customer_GetDropDownListcustomer",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/customers/customer-by-id/{customerID}": {
      "get": {
        "tags": [
          "Customer"
        ],
        "operationId": "Customer_getCustomerByID",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "customerID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/customers/create-customer": {
      "post": {
        "tags": [
          "Customer"
        ],
        "operationId": "Customer_CreateCustomer",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Customers"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/customers/update-customer/{customerID}": {
      "put": {
        "tags": [
          "Customer"
        ],
        "operationId": "Customer_UpdateCustomer",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "customerID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Customers"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/customers/update-status-customer/{customerID}": {
      "put": {
        "tags": [
          "Customer"
        ],
        "operationId": "Customer_UpdateStatusCustomer",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "customerID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/customers/search": {
      "get": {
        "tags": [
          "Customer"
        ],
        "operationId": "Customer_SearchCompany",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "keyword",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/deliveryvehicles/list": {
      "get": {
        "tags": [
          "DeliveryVehicles"
        ],
        "operationId": "DeliveryVehicles_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "searchModel.companyID",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "searchModel.numberVehicle",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchModel.typeVehicleID",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "searchModel.providerID",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "searchModel.page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "searchModel.pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/deliveryvehicles/full-list": {
      "get": {
        "tags": [
          "DeliveryVehicles"
        ],
        "operationId": "DeliveryVehicles_GetListDeliveryVehicle",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/deliveryvehicles/get/{deliveryVehicleID}": {
      "get": {
        "tags": [
          "DeliveryVehicles"
        ],
        "operationId": "DeliveryVehicles_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "deliveryVehicleID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/deliveryvehicles/create": {
      "post": {
        "tags": [
          "DeliveryVehicles"
        ],
        "operationId": "DeliveryVehicles_Create",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "createModel",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeliveryVehiclesCreateModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/deliveryvehicles/update": {
      "put": {
        "tags": [
          "DeliveryVehicles"
        ],
        "operationId": "DeliveryVehicles_Update",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "updateModel",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeliveryVehiclesUpdateModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/deliveryvehicles/delete/{deliveryVehicleID}": {
      "post": {
        "tags": [
          "DeliveryVehicles"
        ],
        "operationId": "DeliveryVehicles_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "deliveryVehicleID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/deliveryvehicles/bycompany/{companyId}": {
      "get": {
        "tags": [
          "DeliveryVehicles"
        ],
        "operationId": "DeliveryVehicles_GetByCompany",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/deliveryvehicles/byprovider/{providerId}": {
      "get": {
        "tags": [
          "DeliveryVehicles"
        ],
        "operationId": "DeliveryVehicles_GetByProvider",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "providerId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/deliveryvehicles/bytype/{typeId}": {
      "get": {
        "tags": [
          "DeliveryVehicles"
        ],
        "operationId": "DeliveryVehicles_GetByType",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "typeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/deliveryvehicles/count": {
      "get": {
        "tags": [
          "DeliveryVehicles"
        ],
        "operationId": "DeliveryVehicles_GetCount",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/deliveryvehicles/search": {
      "get": {
        "tags": [
          "DeliveryVehicles"
        ],
        "operationId": "DeliveryVehicles_Search",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "keyword",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "companyId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/deliveryvehicles/available": {
      "get": {
        "tags": [
          "DeliveryVehicles"
        ],
        "operationId": "DeliveryVehicles_GetAvailable",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/departments/searchdropdownlist": {
      "get": {
        "tags": [
          "Department"
        ],
        "operationId": "Department_SearchDropdownList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "keySearch",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "statusID",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/departments/listdepartment": {
      "get": {
        "tags": [
          "Department"
        ],
        "operationId": "Department_ListDepartment",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "keySearch",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "statusID",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/departments/getliststaffsrecursive/{departmentID}": {
      "get": {
        "tags": [
          "Department"
        ],
        "operationId": "Department_GetListUserOfDepartmentRecursive",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "departmentID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/departments/getliststaffs/{departmentID}": {
      "get": {
        "tags": [
          "Department"
        ],
        "operationId": "Department_GetListUserOfDepartment",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "departmentID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/departments/dropdownlistdepartments": {
      "get": {
        "tags": [
          "Department"
        ],
        "operationId": "Department_GetDropDownListDepartment",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/departments/getstaffdepartments/{staffID}": {
      "get": {
        "tags": [
          "Department"
        ],
        "operationId": "Department_GetStaffDepartments",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "staffID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/departments/departmentbyid/{departmentID}": {
      "get": {
        "tags": [
          "Department"
        ],
        "operationId": "Department_DepartmentByID",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "departmentID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/departments/createdepartment": {
      "post": {
        "tags": [
          "Department"
        ],
        "operationId": "Department_CreateDepartment",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DepartmentModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/departments/updatedepartment/{departmentID}": {
      "put": {
        "tags": [
          "Department"
        ],
        "operationId": "Department_UpdateDepartment",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "departmentID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DepartmentModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/departments/updatestatusdepartment/{departmentID}": {
      "put": {
        "tags": [
          "Department"
        ],
        "operationId": "Department_UpdateStatusDepartment",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "departmentID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/departments/search": {
      "get": {
        "tags": [
          "Department"
        ],
        "operationId": "Department_SearchCompany",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "keyword",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/dispatchdocumentcomment/searchlistcomment/{dispatchDocumentID}": {
      "get": {
        "tags": [
          "DispatchDocument"
        ],
        "operationId": "DispatchDocument_SearchDispatchDocumentComment",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "dispatchDocumentID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/dispatchdocumentcomment/searchlistpinnedcomment/{dispatchDocumentID}": {
      "get": {
        "tags": [
          "DispatchDocument"
        ],
        "operationId": "DispatchDocument_SearchDispatchDocumentPinnedComment",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "dispatchDocumentID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/dispatchdocumentcomment/create/{dispatchDocumentID}": {
      "post": {
        "tags": [
          "DispatchDocument"
        ],
        "operationId": "DispatchDocument_CreateDispatchDocumentComment",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "dispatchDocumentID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "bodyData",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DispatchDocumentCommentModelCreate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/dispatchdocumentcomment/delete/{commentID}": {
      "put": {
        "tags": [
          "DispatchDocument"
        ],
        "operationId": "DispatchDocument_DeleteDispatchDocumentComment",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "commentID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/dispatchdocument/searchlist": {
      "get": {
        "tags": [
          "DispatchDocument"
        ],
        "operationId": "DispatchDocument_SearchListDispatchDocument",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "typeID",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "timeStart",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "timeEnd",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "keySearch",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "statusID",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "GroupDocument",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": -100
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/dispatchdocument/getbyid/{dispatchDocumentID}": {
      "get": {
        "tags": [
          "DispatchDocument"
        ],
        "operationId": "DispatchDocument_GetDispatchDocumentById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "dispatchDocumentID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/dispatchdocument/create": {
      "post": {
        "tags": [
          "DispatchDocument"
        ],
        "operationId": "DispatchDocument_CreateDispatchDocument",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "bodyData",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DispatchDocumentModelCreate"
            }
          },
          {
            "name": "isSendNoti",
            "in": "query",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/dispatchdocument/updatedetail/{dispatchDocumentID}": {
      "put": {
        "tags": [
          "DispatchDocument"
        ],
        "operationId": "DispatchDocument_UpdateDispatchDocumentDetail",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "dispatchDocumentID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "bodyData",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DispatchDocumentDetailModelUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/dispatchdocument/updatestatus/{dispatchDocumentID}": {
      "put": {
        "tags": [
          "DispatchDocument"
        ],
        "operationId": "DispatchDocument_UpdateStatusDispatchDocument",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "dispatchDocumentID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "bodyData",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DispatchDocumentStatusModelUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/dispatchdocument/addattachment/{dispatchDocumentID}": {
      "put": {
        "tags": [
          "DispatchDocument"
        ],
        "operationId": "DispatchDocument_AddDispatchDocumentAttachment",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "dispatchDocumentID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "bodyData",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RequestAttachmentModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/dispatchdocument/removeattachment/{attachmentID}": {
      "put": {
        "tags": [
          "DispatchDocument"
        ],
        "operationId": "DispatchDocument_RemoveDispatchDocumentAttachment",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "attachmentID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/dispatchdocument/delete/{dispatchDoumentID}": {
      "put": {
        "tags": [
          "DispatchDocument"
        ],
        "operationId": "DispatchDocument_DeleteDispatchDocument",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "dispatchDocumentID",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "dispatchDoumentID",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/dispatchdocument/updatestatusattachment": {
      "put": {
        "tags": [
          "DispatchDocument"
        ],
        "operationId": "DispatchDocument_UpdateStatusAttachment",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "dispatchDocumentID",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "attachmentID",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/dispatchdocument/getlistfileattachmentdispathdoccumentbyid/{dispatchDocumentID}": {
      "get": {
        "tags": [
          "DispatchDocument"
        ],
        "operationId": "DispatchDocument_GetListFileAttachmentDispathDoccument",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "dispatchDocumentID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/dispatchdocument/searchlistdispatchdocumentpeople/{dispatchDocumentID}": {
      "get": {
        "tags": [
          "DispatchDocument"
        ],
        "operationId": "DispatchDocument_SearchListToDoListAssign",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "dispatchDocumentID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/dispatchdocumentassigns/listdispatchdocumentassignsbyid/{dispatchDocumentID}": {
      "get": {
        "tags": [
          "DispatchDocumentAssigns"
        ],
        "operationId": "DispatchDocumentAssigns_DispatchDocumentAssignsByID",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "dispatchDocumentID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/dispatchdocumentassigns/create/{dispatchDocumentID}": {
      "post": {
        "tags": [
          "DispatchDocumentAssigns"
        ],
        "operationId": "DispatchDocumentAssigns_CreateDispatchDocumentAssigns",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "dispatchDocumentID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "bodyData",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DispatchDocumentAssignsCreate"
            }
          },
          {
            "name": "isSendNoti",
            "in": "query",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/dispatchdocumentassigns/delete/{dispatchDocumentID}": {
      "post": {
        "tags": [
          "DispatchDocumentAssigns"
        ],
        "operationId": "DispatchDocumentAssigns_DeleteDispatchDocumentAssigns",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "dispatchDocumentID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "bodyData",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DispatchDocumentAssignsCreate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/drive/listdrives": {
      "get": {
        "tags": [
          "Driver"
        ],
        "operationId": "Driver_GetListDrivesAuthenticated",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/drive/drivedefault": {
      "get": {
        "tags": [
          "Driver"
        ],
        "operationId": "Driver_GetDriveDefault",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/drive/drivebyid/{driveID}": {
      "get": {
        "tags": [
          "Driver"
        ],
        "operationId": "Driver_GetDriveByID",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "driveID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/drive/folderpath": {
      "get": {
        "tags": [
          "Driver"
        ],
        "operationId": "Driver_GetFolderPath",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "folderID",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/drive/filefolderpath": {
      "get": {
        "tags": [
          "Driver"
        ],
        "operationId": "Driver_GetFileFolderPath",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "filePublicPath",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/drive/searchchildrenitems/{driveID}": {
      "get": {
        "tags": [
          "Driver"
        ],
        "operationId": "Driver_SearchDriveFolderChildrenItems",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "searchTerm",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "driveID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "folderID",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/drive/childrenitemdetail": {
      "get": {
        "tags": [
          "Driver"
        ],
        "operationId": "Driver_GetDriveFolderChildrenItemDetail",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "itemID",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "itemType",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/drive/childrenitems/{driveID}": {
      "get": {
        "tags": [
          "Driver"
        ],
        "operationId": "Driver_GetListDriveChildrenItems",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "driveID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "folderID",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/drive/navigatefolder/{folderID}": {
      "get": {
        "tags": [
          "Driver"
        ],
        "operationId": "Driver_GetListFolderChildrenItemsNavigation",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "folderID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/drive/childrenitemsorderbydate/{driveID}": {
      "get": {
        "tags": [
          "Driver"
        ],
        "operationId": "Driver_GetListDriveChildrenItemsOrderByDescending",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "driveID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/drive/folderitems/{driveID}": {
      "get": {
        "tags": [
          "Driver"
        ],
        "operationId": "Driver_GetListDriveFolderItems",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "driveID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/drive/breakcrumitems": {
      "get": {
        "tags": [
          "Driver"
        ],
        "operationId": "Driver_GetListBreakCrumItems",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "folderID",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/drive/createprivatefolder/{driveID}": {
      "post": {
        "tags": [
          "Driver"
        ],
        "operationId": "Driver_CreatePrivateFolder",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "driveID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DriverFoldersModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/drive/createcompanyfolder/{driveID}": {
      "post": {
        "tags": [
          "Driver"
        ],
        "operationId": "Driver_CreateCompanyFolder",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "driveID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DriverFoldersModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/drive/createfile/{driveID}": {
      "post": {
        "tags": [
          "Driver"
        ],
        "operationId": "Driver_CreateDriveFile",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "driveID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "folderID",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DriverFileFoldersModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/drive/removechildrenitem/{driveID}": {
      "post": {
        "tags": [
          "Driver"
        ],
        "operationId": "Driver_RemoveDriveChildrenItem",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "driveID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "item",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DriverFolderChildrenItem"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/drive/unsharefilefolder/{driveID}": {
      "post": {
        "tags": [
          "Driver"
        ],
        "operationId": "Driver_UnShareFileFolder",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "driveID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "item",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DriverFolderChildrenItem"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/drive/renamechildrenitem/{driveID}": {
      "put": {
        "tags": [
          "Driver"
        ],
        "operationId": "Driver_RenameChildrenItem",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "driveID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "item",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DriverFolderChildrenItem"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/drive/movechildrenitem/{driveID}/{targetDriveID}": {
      "put": {
        "tags": [
          "Driver"
        ],
        "operationId": "Driver_MoveFileAndFolder",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "driveID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "targetDriveID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "targetFolderID",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "item",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DriverFolderChildrenItem"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/drive/reportquantity": {
      "get": {
        "tags": [
          "Driver"
        ],
        "operationId": "Driver_GetReportQuantity",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/sentemail/sentemailapprove/{staffID}": {
      "post": {
        "tags": [
          "Email"
        ],
        "operationId": "Email_SentEmailApprove",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "staffID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/sentemail/sentemail": {
      "post": {
        "tags": [
          "Email"
        ],
        "operationId": "Email_SentEmailByEmail",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/email/getemailtemplate/{templateName}": {
      "get": {
        "tags": [
          "Email"
        ],
        "operationId": "Email_GetEmailTemplate",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "templateName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/exporttrackingbill/search-drop-down-list": {
      "get": {
        "tags": [
          "ExportTrackingBill"
        ],
        "operationId": "ExportTrackingBill_SearchDropdownList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "keySearch",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/exporttrackingbill/list-export-tracking-bill": {
      "get": {
        "tags": [
          "ExportTrackingBill"
        ],
        "operationId": "ExportTrackingBill_ListExportTrackingBill",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "keySearch",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/exporttrackingbill/list-export-tracking-bill-search": {
      "get": {
        "tags": [
          "ExportTrackingBill"
        ],
        "operationId": "ExportTrackingBill_ListTrackingSearchBill",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "projectIDFrom",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "projectIDTo",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "timeStart",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "timeEnd",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "keySearch",
            "in": "query",
            "required": false,
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/exporttrackingbill/report-export-tracking-bill-search": {
      "get": {
        "tags": [
          "ExportTrackingBill"
        ],
        "operationId": "ExportTrackingBill_ReportExportTrackingBill",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "projectIDFrom",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "projectIDTo",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "timeStart",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "timeEnd",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "keySearch",
            "in": "query",
            "required": false,
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/exporttrackingbill/drop-down-list-export-tracking": {
      "get": {
        "tags": [
          "ExportTrackingBill"
        ],
        "operationId": "ExportTrackingBill_GetDropDownListTracking",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/exporttrackingbill/export-tracking-by-id/{exportTrackingBillID}": {
      "get": {
        "tags": [
          "ExportTrackingBill"
        ],
        "operationId": "ExportTrackingBill_getExportTrackingBillByID",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "exportTrackingBillID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/exporttrackingbill/create-export-tracking-bill": {
      "post": {
        "tags": [
          "ExportTrackingBill"
        ],
        "operationId": "ExportTrackingBill_CreateExportTrackingBill",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateExportTrackingBillModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/exporttrackingbill/update-export-tracking-bill/{exportTrackingBillID}": {
      "put": {
        "tags": [
          "ExportTrackingBill"
        ],
        "operationId": "ExportTrackingBill_UpdateEportTrackingBill",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "exportTrackingBillID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateExportTrackingBillModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/exporttrackingbill/update-check-status/{exportTrackingBillID}": {
      "put": {
        "tags": [
          "ExportTrackingBill"
        ],
        "operationId": "ExportTrackingBill_UpdateCheckStatus",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "exportTrackingBillID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateExportTrackingBillModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/exporttrackingbill/update-approve-status/{exportTrackingBillID}": {
      "put": {
        "tags": [
          "ExportTrackingBill"
        ],
        "operationId": "ExportTrackingBill_UpdateApproveStatus",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "exportTrackingBillID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateExportTrackingBillModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/exporttrackingbill/search": {
      "get": {
        "tags": [
          "ExportTrackingBill"
        ],
        "operationId": "ExportTrackingBill_SearchTrackingbill",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "keyword",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/exporttrackingbill/download-export-tracking-bill": {
      "get": {
        "tags": [
          "ExportTrackingBill"
        ],
        "operationId": "ExportTrackingBill_DownloadReport",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "exportTrackingBillID",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/exporttrackingbill/view-export-tracking-bill": {
      "get": {
        "tags": [
          "ExportTrackingBill"
        ],
        "operationId": "ExportTrackingBill_ViewPdf",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "exportTrackingBillID",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/exporttrackingbill/list-export-excel": {
      "get": {
        "tags": [
          "ExportTrackingBill"
        ],
        "operationId": "ExportTrackingBill_getExportTrackingBillExcel",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "timeStart",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "timeEnd",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/group/listgroups": {
      "get": {
        "tags": [
          "Group"
        ],
        "operationId": "Group_ListGroups",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "keySearch",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "statusID",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/group/searchmembers/{groupID}": {
      "get": {
        "tags": [
          "Group"
        ],
        "operationId": "Group_SearchGroupMembers",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "groupID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "departmentID",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "positionID",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "searchText",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/group/updatemembers/{groupID}": {
      "put": {
        "tags": [
          "Group"
        ],
        "operationId": "Group_UpdateGroupMembers",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "groupID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MemberInGroupUpdateBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/group/groupbyid/{groupID}": {
      "get": {
        "tags": [
          "Group"
        ],
        "operationId": "Group_GroupByID",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "groupID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/group/creategroup": {
      "post": {
        "tags": [
          "Group"
        ],
        "operationId": "Group_CreateGroup",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GroupModels"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/group/updategroup/{groupID}": {
      "put": {
        "tags": [
          "Group"
        ],
        "operationId": "Group_UpdateGroup",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "groupID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GroupModels"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/group/updatestatusgroup/{groupID}": {
      "put": {
        "tags": [
          "Group"
        ],
        "operationId": "Group_UpdateStatusGroup",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "groupID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/groupstaff/creategroup": {
      "post": {
        "tags": [
          "Group"
        ],
        "operationId": "Group_CreateGroupStaff",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GroupStaffModels"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/groupstaff/updatestatusgroupstaff/{groupstaffID}": {
      "put": {
        "tags": [
          "Group"
        ],
        "operationId": "Group_UpdateStatusGroupStaff",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "groupstaffID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/groupstaff/liststaffingroupbyid/{groupstaffID}": {
      "get": {
        "tags": [
          "Group"
        ],
        "operationId": "Group_ListStaffInGroupByID",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "groupstaffID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/groupstaff/listgroupinstaffbyid/{staffID}": {
      "get": {
        "tags": [
          "Group"
        ],
        "operationId": "Group_ListGroupInStaffByID",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "staffID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/groupemail/searchcompanygroupemail": {
      "get": {
        "tags": [
          "GroupEmail"
        ],
        "operationId": "GroupEmail_SearchCompanyGroupEmail",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "keySearch",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/groupemail/getcompanygroupemail/{groupEmailID}": {
      "get": {
        "tags": [
          "GroupEmail"
        ],
        "operationId": "GroupEmail_GetCompanyGroupEmailDetail",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "groupEmailID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/groupemail/createcompanygroupemail": {
      "post": {
        "tags": [
          "GroupEmail"
        ],
        "operationId": "GroupEmail_CreateCompanyGroupEmail",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "dataCreate",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GroupEmailModelCreate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/groupemail/updatecompanygroupemail/{groupEmailID}": {
      "put": {
        "tags": [
          "GroupEmail"
        ],
        "operationId": "GroupEmail_UpdateCompanyGroupEmail",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "groupEmailID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "dataUpdate",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GroupEmailModelUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/groupemail/deletecompanygroupemail/{groupEmailID}": {
      "put": {
        "tags": [
          "GroupEmail"
        ],
        "operationId": "GroupEmail_DeleteCompanyGroupEmail",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "groupEmailID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/handingplan/getlisthandlingplan": {
      "get": {
        "tags": [
          "HandlingPlan"
        ],
        "operationId": "HandlingPlan_GetListHandlingPlan",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/messaging/subscribechannels": {
      "post": {
        "tags": [
          "Messaging"
        ],
        "operationId": "Messaging_SubscribeMessagingChannels",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/messaging/unsubscribefromchannels": {
      "post": {
        "tags": [
          "Messaging"
        ],
        "operationId": "Messaging_UnSubscribeFromMessagingChannels",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/messaging/getprivatenotifications": {
      "get": {
        "tags": [
          "Messaging"
        ],
        "operationId": "Messaging_GetPrivateNotifications",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/messaging/getnotificationsbyserviceid": {
      "get": {
        "tags": [
          "Messaging"
        ],
        "operationId": "Messaging_GetNotificationsByServiceID",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "serviceID",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/messaging/countunreadnotifications": {
      "get": {
        "tags": [
          "Messaging"
        ],
        "operationId": "Messaging_CountUnreadNotificationsByServiceID",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "serviceID",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/messaging/updateisviewnotification/{notificationID}": {
      "post": {
        "tags": [
          "Messaging"
        ],
        "operationId": "Messaging_UpdateNotificationsIsView",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "notificationID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/messaging/sendPrivateMessage": {
      "post": {
        "tags": [
          "Messaging"
        ],
        "operationId": "Messaging_SendPrivateMessage",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NotificationModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/messaging/sendPrivateMessage/{receiverID}": {
      "post": {
        "tags": [
          "Messaging"
        ],
        "operationId": "Messaging_PostApiMessagingSendPrivateMessageByReceiverID",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "receiverID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NotificationModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/messaging/sendCompanyMessage": {
      "post": {
        "tags": [
          "Messaging"
        ],
        "operationId": "Messaging_SendCompanyMessage",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NotificationModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/policy/getlistgroupmodules": {
      "get": {
        "tags": [
          "Policy"
        ],
        "operationId": "Policy_GetListGroupModules",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "serviceID",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/policy/getlistpolicymodules": {
      "get": {
        "tags": [
          "Policy"
        ],
        "operationId": "Policy_GetListPolicyModules",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "staffID",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "groupID",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "serviceID",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "groupModuleID",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/policy/getlistallowedservices": {
      "get": {
        "tags": [
          "Policy"
        ],
        "operationId": "Policy_GetListAllowedServicesByStaffID",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/policy/getlistclaimnames": {
      "get": {
        "tags": [
          "Policy"
        ],
        "operationId": "Policy_GetListClaimNamesByStaffID",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "servicesID",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/policy/updatepolicypermissions": {
      "post": {
        "tags": [
          "Policy"
        ],
        "operationId": "Policy_UpdatePolicyPermissions",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PolicyPermissionUpdateModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/policy/updateallpolicypermissions": {
      "post": {
        "tags": [
          "Policy"
        ],
        "operationId": "Policy_UpdateAllPolicyPermissions",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "accessAllowed",
            "in": "query",
            "required": true,
            "type": "boolean"
          },
          {
            "name": "staffID",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "groupID",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "servicesID",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "groupModuleID",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/position/listpositions": {
      "get": {
        "tags": [
          "Position"
        ],
        "operationId": "Position_ListPositions",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "keySearch",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "statusID",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/position/dropdownlistpositions": {
      "get": {
        "tags": [
          "Position"
        ],
        "operationId": "Position_GetDropDownListPositions",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/position/positionbyid/{positionID}": {
      "get": {
        "tags": [
          "Position"
        ],
        "operationId": "Position_PositionByID",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "positionID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/position/createposition": {
      "post": {
        "tags": [
          "Position"
        ],
        "operationId": "Position_CreatePosition",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PositionModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/position/updateposition/{postionID}": {
      "put": {
        "tags": [
          "Position"
        ],
        "operationId": "Position_UpdatePosition",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "postionID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PositionModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/position/updatestatusposition/{positionID}": {
      "put": {
        "tags": [
          "Position"
        ],
        "operationId": "Position_UpdateStatusPosition",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "positionID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/projects/list": {
      "get": {
        "tags": [
          "Projects"
        ],
        "operationId": "Projects_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "searchModel.projectName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchModel.address",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchModel.page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "searchModel.pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/projects/get/{projectID}": {
      "get": {
        "tags": [
          "Projects"
        ],
        "operationId": "Projects_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "projectID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/projects/create": {
      "post": {
        "tags": [
          "Projects"
        ],
        "operationId": "Projects_Create",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "createModel",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProjectsCreateModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/projects/update": {
      "put": {
        "tags": [
          "Projects"
        ],
        "operationId": "Projects_Update",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "updateModel",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProjectsUpdateModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/projects/delete/{projectID}": {
      "post": {
        "tags": [
          "Projects"
        ],
        "operationId": "Projects_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "projectID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/projects/count": {
      "get": {
        "tags": [
          "Projects"
        ],
        "operationId": "Projects_GetCount",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/providervehicles/list": {
      "get": {
        "tags": [
          "ProviderVehicles"
        ],
        "operationId": "ProviderVehicles_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "searchModel.providerName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchModel.phone",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchModel.email",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchModel.taxCode",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchModel.contactPerson",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchModel.phoneContact",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchModel.page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "searchModel.pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/providervehicles/get/{providerID}": {
      "get": {
        "tags": [
          "ProviderVehicles"
        ],
        "operationId": "ProviderVehicles_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "providerID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/providervehicles/create": {
      "post": {
        "tags": [
          "ProviderVehicles"
        ],
        "operationId": "ProviderVehicles_Create",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "createModel",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProviderVehiclesCreateModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/providervehicles/update": {
      "put": {
        "tags": [
          "ProviderVehicles"
        ],
        "operationId": "ProviderVehicles_Update",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "updateModel",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProviderVehiclesUpdateModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/providervehicles/delete/{providerID}": {
      "post": {
        "tags": [
          "ProviderVehicles"
        ],
        "operationId": "ProviderVehicles_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "providerID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/providervehicles/all": {
      "get": {
        "tags": [
          "ProviderVehicles"
        ],
        "operationId": "ProviderVehicles_GetAll",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/providervehicles/search": {
      "get": {
        "tags": [
          "ProviderVehicles"
        ],
        "operationId": "ProviderVehicles_Search",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "keyword",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/providervehicles/count": {
      "get": {
        "tags": [
          "ProviderVehicles"
        ],
        "operationId": "ProviderVehicles_GetCount",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/listnewstaffs/export": {
      "get": {
        "tags": [
          "Report"
        ],
        "operationId": "Report_DownloadReportNewStaffs",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "fromdate",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "todate",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/listnewstaffs": {
      "get": {
        "tags": [
          "Report"
        ],
        "operationId": "Report_ListNewStaffs",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/listdateoffs/export": {
      "get": {
        "tags": [
          "Report"
        ],
        "operationId": "Report_DownloadReportDateOffs",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "fromdate",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "todate",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/listdateoffs": {
      "get": {
        "tags": [
          "Report"
        ],
        "operationId": "Report_ListDateOff",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/listbirthdays/export": {
      "get": {
        "tags": [
          "Report"
        ],
        "operationId": "Report_DownloadReportBirthdays",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "fromdate",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "todate",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/listbirthdays": {
      "get": {
        "tags": [
          "Report"
        ],
        "operationId": "Report_ListBirthdays",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/listsenioritys/export": {
      "get": {
        "tags": [
          "Report"
        ],
        "operationId": "Report_DownloadReportSenioritys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "companyID",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "todate",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/listsenioritys": {
      "get": {
        "tags": [
          "Report"
        ],
        "operationId": "Report_ListSenioritys",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/requestattachment/listattachments": {
      "get": {
        "tags": [
          "RequestAttachment"
        ],
        "operationId": "RequestAttachment_GetListAttach",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "processID",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "workFlowID",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/requestattachment/createattachment": {
      "post": {
        "tags": [
          "RequestAttachment"
        ],
        "operationId": "RequestAttachment_CreateAttachment",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RequestAttachmentModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/requestattachment/updatestatusattachment": {
      "put": {
        "tags": [
          "RequestAttachment"
        ],
        "operationId": "RequestAttachment_UpdateStatusAttachment",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "processID",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "workFlowID",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "attachmentID",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/requestcomment/createrequestcomment": {
      "post": {
        "tags": [
          "RequestComment"
        ],
        "operationId": "RequestComment_Create",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "RequestProcessID",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/requestcomment/getrequestcommentbyid": {
      "get": {
        "tags": [
          "RequestComment"
        ],
        "operationId": "RequestComment_GetListRequestCommentByID",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "RequestProcessID",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "WorkFlowID",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/requestcomment/getrequestcommentchat": {
      "get": {
        "tags": [
          "RequestComment"
        ],
        "operationId": "RequestComment_GetListRequestCommentChat",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "ProcessID",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "CommentID",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/requestcomment/getlistrequestcommentbyworkflowid/{workFlowID}": {
      "get": {
        "tags": [
          "RequestComment"
        ],
        "operationId": "RequestComment_getListRequestcommentByWorkflowID",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "workFlowID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/requestcomment/createrequestcommentworkflow": {
      "post": {
        "tags": [
          "RequestComment"
        ],
        "operationId": "RequestComment_CreateRequestCommentWorkflow",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "workFlowID",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/requestforward/listrequestforward": {
      "get": {
        "tags": [
          "RequestForward"
        ],
        "operationId": "RequestForward_ListProcessForward",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "keySearch",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "statusID",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/requestforward/createrequestforward": {
      "post": {
        "tags": [
          "RequestForward"
        ],
        "operationId": "RequestForward_CreateRequestForward",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RequestForwardModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/requestprocess/listprocesscreatedbyme": {
      "get": {
        "tags": [
          "RequestProcess"
        ],
        "operationId": "RequestProcess_GetListProcessCreatedByMe",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "keySearch",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/requestprocess/listprocessneedmyapproval": {
      "get": {
        "tags": [
          "RequestProcess"
        ],
        "operationId": "RequestProcess_GetListProcessNeedMyApproval",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "keySearch",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/requestprocess/listprocess": {
      "get": {
        "tags": [
          "RequestProcess"
        ],
        "operationId": "RequestProcess_ListProcess",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "keySearch",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "statusID",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "userID",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "fromDate",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "toDate",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/requestprocess/information": {
      "get": {
        "tags": [
          "RequestProcess"
        ],
        "operationId": "RequestProcess_GetInformation",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "keySearch",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "statusID",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "userID",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "fromDate",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "toDate",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/requestprocess/getuserapproverequest/{processID}": {
      "get": {
        "tags": [
          "RequestProcess"
        ],
        "operationId": "RequestProcess_GetUserApproveRequest",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "processID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/requestprocess/getprocessbyid/{processID}": {
      "get": {
        "tags": [
          "RequestProcess"
        ],
        "operationId": "RequestProcess_GetProcessByID",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "processID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/requestprocess/createrequestprocess": {
      "post": {
        "tags": [
          "RequestProcess"
        ],
        "operationId": "RequestProcess_CreateProcess",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RequestProcessModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/requestprocess/updateprocess/{processID}": {
      "put": {
        "tags": [
          "RequestProcess"
        ],
        "operationId": "RequestProcess_UpdateProcess",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "processID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "dataUpdate",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RequestProcessModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/requestprocess/updateprocess/userforward/{processID}": {
      "put": {
        "tags": [
          "RequestProcess"
        ],
        "operationId": "RequestProcess_UpdateProcessUserForward",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "processID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "dataUpdate",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RequestForwardModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/requestprocess/deleteprocess/{processID}": {
      "put": {
        "tags": [
          "RequestProcess"
        ],
        "operationId": "RequestProcess_DeleteProcess",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "processID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/requestprocess/getlistuserinvolvedinprocess/{processID}": {
      "get": {
        "tags": [
          "RequestProcess"
        ],
        "operationId": "RequestProcess_GetListUserInvolvedInProcess",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "processID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/services/count": {
      "get": {
        "tags": [
          "Services"
        ],
        "operationId": "Services_GetTotalService",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/services/listservices": {
      "get": {
        "tags": [
          "Services"
        ],
        "operationId": "Services_GetListServices",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/services/servicebyid/{serviceID}": {
      "get": {
        "tags": [
          "Services"
        ],
        "operationId": "Services_GetServiceByID",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "serviceID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/services/createservice": {
      "post": {
        "tags": [
          "Services"
        ],
        "operationId": "Services_PostCreateService",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/services/updateservice/{serviceID}": {
      "put": {
        "tags": [
          "Services"
        ],
        "operationId": "Services_PutUpdateService",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "serviceID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/services/updatestatusservice/{serviceID}": {
      "put": {
        "tags": [
          "Services"
        ],
        "operationId": "Services_PutUpdateStatusService",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "serviceID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/services/search": {
      "get": {
        "tags": [
          "Services"
        ],
        "operationId": "Services_SearchService",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "keyword",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/staff/getprofile": {
      "get": {
        "tags": [
          "Staff"
        ],
        "operationId": "Staff_GetMyStaffProfile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/staff/updateavatar": {
      "post": {
        "tags": [
          "Staff"
        ],
        "operationId": "Staff_UpdateUserAvatar",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StaffDetailsModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/staff/isuseractive/{staffID}": {
      "get": {
        "tags": [
          "Staff"
        ],
        "operationId": "Staff_IsUserActivated",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "staffID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/staff/getdropdownlist": {
      "get": {
        "tags": [
          "Staff"
        ],
        "operationId": "Staff_GetDropdownListByStaffIDs",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "staffIDs",
            "in": "query",
            "required": true,
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/staff/searchdropdownlist": {
      "get": {
        "tags": [
          "Staff"
        ],
        "operationId": "Staff_SearchDropdownList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "keySearch",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "statusID",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/staff/getprofile/{staffID}": {
      "get": {
        "tags": [
          "Staff"
        ],
        "operationId": "Staff_GetStaffProfileByID",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "staffID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/staff/getlistcompanystaffs": {
      "get": {
        "tags": [
          "Staff"
        ],
        "operationId": "Staff_GetCompanyStaffsList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "departmentID",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/staff/searchconcurrentstaffinfos": {
      "get": {
        "tags": [
          "Staff"
        ],
        "operationId": "Staff_SearchCompanyConcurrentStaffInfos",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "departmentID",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/staff/searchcompanystaffs": {
      "get": {
        "tags": [
          "Staff"
        ],
        "operationId": "Staff_SearchCompanyStaffs",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "departmentID",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "keySearch",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "statusID",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/staff/getlistadmins": {
      "get": {
        "tags": [
          "Staff"
        ],
        "operationId": "Staff_GetListAdmins",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "departmentID",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/staff/searchcompanystaffslistadmin": {
      "get": {
        "tags": [
          "Staff"
        ],
        "operationId": "Staff_SearchCompanyStaffsAdmin",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "keySearch",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "statusID",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/staff/getheaderinfo": {
      "get": {
        "tags": [
          "Staff"
        ],
        "operationId": "Staff_GetStaffHeaderInfo",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/staff/getuserapproverequest": {
      "get": {
        "tags": [
          "Staff"
        ],
        "operationId": "Staff_GetUserApproveRequest",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "departmentID",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/staff/getuserapproverequestbyorgchart": {
      "get": {
        "tags": [
          "Staff"
        ],
        "operationId": "Staff_GetUserApproveRequestByOrgChart",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "departmentID",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/staff/getusermanagerrequest/{departmentID}": {
      "get": {
        "tags": [
          "Staff"
        ],
        "operationId": "Staff_GetUserManagerRequest",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "departmentID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/staff/searchgroups/{staffID}": {
      "get": {
        "tags": [
          "Staff"
        ],
        "operationId": "Staff_SearchGroupsByStaffID",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "staffID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "searchText",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/staff/updategroups/{staffID}": {
      "put": {
        "tags": [
          "Staff"
        ],
        "operationId": "Staff_UpdateStaffGroups",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "staffID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GroupOfMemberUpdateBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/staff/createstaff": {
      "post": {
        "tags": [
          "Staff"
        ],
        "operationId": "Staff_CreateStaffProfile",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "dataCreate",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StaffDetailsModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/staff/updatestaff/{staffID}": {
      "put": {
        "tags": [
          "Staff"
        ],
        "operationId": "Staff_UpdateStaffProfile",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "staffID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "dataUpdate",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StaffDetailsModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/staff/updateadmin/{staffID}": {
      "put": {
        "tags": [
          "Staff"
        ],
        "operationId": "Staff_UpdateAdmin",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "staffID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "dataUpdate",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StaffDetailsModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/staff/deletestaff/{staffID}": {
      "put": {
        "tags": [
          "Staff"
        ],
        "operationId": "Staff_DeleteStaff",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "staffID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/staff/getListStaffOfCompany/{companyID}": {
      "get": {
        "tags": [
          "Staff"
        ],
        "operationId": "Staff_getListStaffOfCompany",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "companyID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/staff/getuserbystaffidandcompanyID/{UserRequirementID}": {
      "get": {
        "tags": [
          "Staff"
        ],
        "operationId": "Staff_GetUserByStaffIDAndCompanyID",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "UserRequirementID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/staff/searchstaffcustomer": {
      "get": {
        "tags": [
          "Staff"
        ],
        "operationId": "Staff_SearchStaffCustomer",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "departmentID",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "keySearch",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "statusID",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/staff/getlistconcurrentstaffinfos/{staffID}": {
      "get": {
        "tags": [
          "Staff"
        ],
        "operationId": "Staff_GetListConcurrentStaffInfosByStaffID",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "staffID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/staff/addconcurrentstaffinfo/{staffID}": {
      "post": {
        "tags": [
          "Staff"
        ],
        "operationId": "Staff_AddConcurrentStaffInfo",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "staffID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConcurrentStaffInfoModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/staff/updateconcurrentstaffinfo/{staffInfoID}": {
      "put": {
        "tags": [
          "Staff"
        ],
        "operationId": "Staff_UpdateConcurrentStaffInfo",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "staffInfoID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConcurrentStaffInfoModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/staff/deleteconcurrentstaffinfo/{staffInfoID}": {
      "put": {
        "tags": [
          "Staff"
        ],
        "operationId": "Staff_DeleteConcurrentStaffInfo",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "staffInfoID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/staff/searchcompanyorgchartitems": {
      "get": {
        "tags": [
          "Staff"
        ],
        "operationId": "Staff_SearchCompanyOrgChartItems",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/staff/relocatestaffinfointoanotherdepartment/{staffInfoID}/{departmentID}": {
      "put": {
        "tags": [
          "Staff"
        ],
        "operationId": "Staff_RelocateStaffInfoIntoAnotherDepartment",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "staffInfoID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "departmentID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "managerInfoID",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/staff/getcompanystaffinfobyid/{staffInfoID}": {
      "get": {
        "tags": [
          "Staff"
        ],
        "operationId": "Staff_GetCompanyStaffInfoByID",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "staffInfoID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/staff/updatecompanystaffinfobyid/{staffInfoID}": {
      "put": {
        "tags": [
          "Staff"
        ],
        "operationId": "Staff_UpdateCompanyStaffInfoByID",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "staffInfoID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StaffInfoModelUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/staff/replacedepartmentmanager/{departmentID}/{staffInfoID}": {
      "put": {
        "tags": [
          "Staff"
        ],
        "operationId": "Staff_ReplaceDepartmentManager",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "departmentID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "staffInfoID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/todolist/searchlisttodo": {
      "get": {
        "tags": [
          "ToDoList"
        ],
        "operationId": "ToDoList_SearchListToDoLists",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "timeStart",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "timeEnd",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "titleSearch",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "categoryID",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "statusID",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/todolist/searchlisttodo/referencesbyme": {
      "get": {
        "tags": [
          "ToDoList"
        ],
        "operationId": "ToDoList_SearchListToDoListsReferencesByMe",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "timeStart",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "timeEnd",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "titleSearch",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "categoryID",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "statusID",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/todolist/searchlisttodo/createdbyme": {
      "get": {
        "tags": [
          "ToDoList"
        ],
        "operationId": "ToDoList_SearchListToDoListsCreatedByMe",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "timeStart",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "timeEnd",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "titleSearch",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "categoryID",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "statusID",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/todolist/searchlisttodo/assignedtome": {
      "get": {
        "tags": [
          "ToDoList"
        ],
        "operationId": "ToDoList_SearchListToDoListsAssignedToMe",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "timeStart",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "timeEnd",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "titleSearch",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "categoryID",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "statusID",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/todolist/searchlistconfirmedtodo": {
      "get": {
        "tags": [
          "ToDoList"
        ],
        "operationId": "ToDoList_SearchListConfirmedToDoLists",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "titleSearch",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "isConfirmed",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/todolist/countconfirmedtodo": {
      "get": {
        "tags": [
          "ToDoList"
        ],
        "operationId": "ToDoList_CountConfirmedToDoLists",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/todolist/confirmtodolist/{toDoListID}": {
      "put": {
        "tags": [
          "ToDoList"
        ],
        "operationId": "ToDoList_ConfirmToDoList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "toDoListID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/todolist/getbyid/{toDoListID}": {
      "get": {
        "tags": [
          "ToDoList"
        ],
        "operationId": "ToDoList_GetToDoListByID",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "toDoListID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/todolist/create": {
      "post": {
        "tags": [
          "ToDoList"
        ],
        "operationId": "ToDoList_CreateToDoList",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "bodyData",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ToDoListModelCreate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/todolist/createfromtemplate/{templateID}": {
      "post": {
        "tags": [
          "ToDoList"
        ],
        "operationId": "ToDoList_CreateToDoListFromTemplate",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "templateID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "bodyData",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ToDoListModelCloneCreate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/todolist/update/{toDoListID}": {
      "put": {
        "tags": [
          "ToDoList"
        ],
        "operationId": "ToDoList_UpdateToDoList",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "toDoListID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "bodyData",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ToDoListModelUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/todolist/updateusercreatetodolist/{toDoListID}/{userFranchiseeID}": {
      "put": {
        "tags": [
          "ToDoList"
        ],
        "operationId": "ToDoList_UpdateUserCreatedToDoList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "toDoListID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "userFranchiseeID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/todolist/updatestatustodolist/{toDoListID}/{statusID}": {
      "put": {
        "tags": [
          "ToDoList"
        ],
        "operationId": "ToDoList_UpdateStatusToDoList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "toDoListID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "statusID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/todolist/getdescription/{toDoListID}": {
      "get": {
        "tags": [
          "ToDoList"
        ],
        "operationId": "ToDoList_GetToDoListsDescription",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "toDoListID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/todolist/updateisseen/{toDoListID}": {
      "put": {
        "tags": [
          "ToDoList"
        ],
        "operationId": "ToDoList_UpdateIsSeen",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "toDoListID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/todolist/updatedescription/{toDoListID}": {
      "put": {
        "tags": [
          "ToDoList"
        ],
        "operationId": "ToDoList_UpdateToDoListDescription",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "toDoListID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "bodyData",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ToDoListDescriptionModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/todolist/delete/{toDoListID}": {
      "put": {
        "tags": [
          "ToDoList"
        ],
        "operationId": "ToDoList_DeleteToDoList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "toDoListID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/todolist/clonetodolistbyid/{toDoListID}": {
      "post": {
        "tags": [
          "ToDoList"
        ],
        "operationId": "ToDoList_CloneToDoListByID",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "toDoListID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "bodyData",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ToDoListModelCloneCreate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/todolisttemplate/create/{toDoListID}": {
      "post": {
        "tags": [
          "ToDoList"
        ],
        "operationId": "ToDoList_CreateToDoListTemplate",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "toDoListID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "bodyData",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ToDoListTemplateModelCreate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/todolisttemplate/update/{toDoListTemplateID}": {
      "put": {
        "tags": [
          "ToDoList"
        ],
        "operationId": "ToDoList_UpdateToDoListTemplate",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "toDoListTemplateID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "bodyData",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ToDoListTemplateModelUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/todolisttemplate/delete/{toDoListTemplateID}": {
      "put": {
        "tags": [
          "ToDoList"
        ],
        "operationId": "ToDoList_DeleteToDoListTemplate",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "toDoListTemplateID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/todolisttemplate/searchlist": {
      "get": {
        "tags": [
          "ToDoList"
        ],
        "operationId": "ToDoList_SearchListToDoListTemplate",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "titleSearch",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/todolistassign/searchlisttodoassign/{toDoListID}": {
      "get": {
        "tags": [
          "ToDoListAssign"
        ],
        "operationId": "ToDoListAssign_SearchListToDoListAssign",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "toDoListID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/todolistassign/updateconfirm/{toDoListID}/{isConfirm}": {
      "post": {
        "tags": [
          "ToDoListAssign"
        ],
        "operationId": "ToDoListAssign_ConfirmToDoListAssignOfUser",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "toDoListID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "isConfirm",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/todolistassign/create/{toDoListID}": {
      "post": {
        "tags": [
          "ToDoListAssign"
        ],
        "operationId": "ToDoListAssign_CreateToDoListAssign",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "toDoListID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "bodyData",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ToDoListAssignModelCreate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/todolistassign/update/{toDoListID}": {
      "post": {
        "tags": [
          "ToDoListAssign"
        ],
        "operationId": "ToDoListAssign_UpdateToDoListAssign",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "toDoListID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "bodyData",
            "in": "body",
            "required": true,
            "schema": {
              "items": {
                "$ref": "#/definitions/ToDoListAssignModelCreate"
              },
              "xml": {
                "name": "ToDoListAssignModelCreate",
                "wrapped": true
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/todolistassign/delete/{toDoListsAssignID}": {
      "put": {
        "tags": [
          "ToDoListAssign"
        ],
        "operationId": "ToDoListAssign_DeleteToDoListAssign",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "toDoListsAssignID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/todolistassign/delete/{toDoListID}/{staffID}": {
      "put": {
        "tags": [
          "ToDoListAssign"
        ],
        "operationId": "ToDoListAssign_DeleteToDoListAssignByStaffID",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "toDoListID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "staffID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/todolistassign/innitiatehidden/{toDoListID}": {
      "put": {
        "tags": [
          "ToDoListAssign"
        ],
        "operationId": "ToDoListAssign_InnitiateUserAssignHidden",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "toDoListID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/todolistassign/isaccepttodo/{toDoListID}": {
      "put": {
        "tags": [
          "ToDoListAssign"
        ],
        "operationId": "ToDoListAssign_IsAcceptToDo",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "toDoListID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "staffAssignID",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/todolistassign/issuccesstodo/{toDoListID}": {
      "put": {
        "tags": [
          "ToDoListAssign"
        ],
        "operationId": "ToDoListAssign_IsSuccessToDo",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "toDoListID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/todolistassign/isnotsuccesstodo/{toDoListID}": {
      "put": {
        "tags": [
          "ToDoListAssign"
        ],
        "operationId": "ToDoListAssign_IsNotSuccessToDo",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "toDoListID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "staffAssignID",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/todolistattachment/searchlisttodoattachment/{toDoListID}": {
      "get": {
        "tags": [
          "ToDoListAttachment"
        ],
        "operationId": "ToDoListAttachment_SearchListToDoListAttachment",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "toDoListID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/todolistattachment/searchlistproductattachments/{toDoListID}": {
      "get": {
        "tags": [
          "ToDoListAttachment"
        ],
        "operationId": "ToDoListAttachment_SearchListProductAttachmentsByToDoListID",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "toDoListID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/todolistattachment/create/{toDoListID}": {
      "post": {
        "tags": [
          "ToDoListAttachment"
        ],
        "operationId": "ToDoListAttachment_CreateToDoListAttachment",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "toDoListID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "bodyData",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ToDoListsAttachmentsModelCreate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/todolistattachment/delete/{ToDoListsAttachmentID}": {
      "put": {
        "tags": [
          "ToDoListAttachment"
        ],
        "operationId": "ToDoListAttachment_DeleteToDoListAttachment",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "ToDoListsAttachmentID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/task/getlisttodolistcategory": {
      "get": {
        "tags": [
          "ToDoListCategory"
        ],
        "operationId": "ToDoListCategory_GetListToDoCategorys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/task/gettodolistcategorybyid/{categoryNewsID}": {
      "get": {
        "tags": [
          "ToDoListCategory"
        ],
        "operationId": "ToDoListCategory_GetToDoCategoryByID",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "categoryNewsID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/task/createtodolistcategory": {
      "post": {
        "tags": [
          "ToDoListCategory"
        ],
        "operationId": "ToDoListCategory_CreateToDoCategory",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BookingCategoryModelCreate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/task/updatetodolistcategory/{categoryNewsID}": {
      "put": {
        "tags": [
          "ToDoListCategory"
        ],
        "operationId": "ToDoListCategory_UpdateToDoCategory",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "categoryNewsID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BookingCategoryModelUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/task/deletetodolistcategory/{categoryNewsID}": {
      "put": {
        "tags": [
          "ToDoListCategory"
        ],
        "operationId": "ToDoListCategory_DeteteToDoCategory",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "categoryNewsID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/todolistcomment/searchlistcomment/{toDoListID}": {
      "get": {
        "tags": [
          "ToDoListComment"
        ],
        "operationId": "ToDoListComment_SeachToDoListComent",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "toDoListID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/todolistcomment/create/{toDoListID}": {
      "post": {
        "tags": [
          "ToDoListComment"
        ],
        "operationId": "ToDoListComment_CreateToDoListComment",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "toDoListID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "bodyData",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ToDoListCommentModelCreate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/todolistcomment/delete/{commentID}": {
      "put": {
        "tags": [
          "ToDoListComment"
        ],
        "operationId": "ToDoListComment_DeleteToDoListComment",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "commentID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/todolistlink/getlistmilestonelinks/{toDoListMileStoneID}": {
      "get": {
        "tags": [
          "ToDoListLink"
        ],
        "operationId": "ToDoListLink_GetToDoListMilestoneLinks",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "toDoListMileStoneID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/todolistlink/createmilestonelink": {
      "post": {
        "tags": [
          "ToDoListLink"
        ],
        "operationId": "ToDoListLink_AddToDoListMilestoneLink",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ToDoListMilestoneLinkModelCreate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/todolistlink/update/{linkID}": {
      "put": {
        "tags": [
          "ToDoListLink"
        ],
        "operationId": "ToDoListLink_UpdateToDoListMilestoneLink",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "linkID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ToDoListMilestoneLinkModelUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/todolistlink/delete/{linkID}": {
      "put": {
        "tags": [
          "ToDoListLink"
        ],
        "operationId": "ToDoListLink_DeleteToDoListLink",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "linkID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/todolistmilestone/searchlisttodomilestone/{toDoListID}": {
      "get": {
        "tags": [
          "ToDoListMilestone"
        ],
        "operationId": "ToDoListMilestone_SearchListToDoListMilestones",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "toDoListID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/todolistmilestone/getbyid/{toDoListMileStoneID}": {
      "get": {
        "tags": [
          "ToDoListMilestone"
        ],
        "operationId": "ToDoListMilestone_GetToDoListMilestoneByID",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "toDoListMileStoneID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/todolistmilestone/create/{toDoListID}": {
      "post": {
        "tags": [
          "ToDoListMilestone"
        ],
        "operationId": "ToDoListMilestone_CreateToDoListMilestone",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "toDoListID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "bodyData",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ToDoListMilestoneModelCreate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/todolistmilestone/update/{toDoListMileStoneID}": {
      "put": {
        "tags": [
          "ToDoListMilestone"
        ],
        "operationId": "ToDoListMilestone_UpdateToDoListMilestone",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "toDoListMileStoneID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "bodyData",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ToDoListMilestoneModelUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/todolistmilestone/relocate/{todoListID}/{fromIndex}/{toIndex}": {
      "put": {
        "tags": [
          "ToDoListMilestone"
        ],
        "operationId": "ToDoListMilestone_RelocateToDoListMilestone",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "todoListID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "fromIndex",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "toIndex",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/todolistmilestone/migrate/{toDoListMileStoneID}/{toToDoListID}": {
      "put": {
        "tags": [
          "ToDoListMilestone"
        ],
        "operationId": "ToDoListMilestone_MigrateToDoListMilestone",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "toDoListMileStoneID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "toToDoListID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "toIndex",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/todolistmilestone/validatecheckstatus/{toDoListMileStoneID}": {
      "get": {
        "tags": [
          "ToDoListMilestone"
        ],
        "operationId": "ToDoListMilestone_ValidateCheckingLinkInMilestone",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "toDoListMileStoneID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/todolistmilestone/updatestatus/{toDoListMileStoneID}/{statusID}": {
      "put": {
        "tags": [
          "ToDoListMilestone"
        ],
        "operationId": "ToDoListMilestone_UpdateStatusToDoMilestone",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "toDoListMileStoneID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "statusID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/todolistmilestone/delete/{toDoListMileStoneID}": {
      "put": {
        "tags": [
          "ToDoListMilestone"
        ],
        "operationId": "ToDoListMilestone_DeleteToDoListMilestone",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "toDoListMileStoneID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/milestonestatics/category/getstatistics": {
      "get": {
        "tags": [
          "ToDoListMilestoneStatistic"
        ],
        "operationId": "ToDoListMilestoneStatistic_GetMilestoneStatisticsCategory",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "timeStart",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "timeEnd",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "strStaffIDs",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/milestonestatics/getstatistics": {
      "get": {
        "tags": [
          "ToDoListMilestoneStatistic"
        ],
        "operationId": "ToDoListMilestoneStatistic_GetMilestoneStatistic",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "timeStart",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "timeEnd",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "strStaffIDs",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/todolistsreferences/listtodolistsreferencesbyid/{toDoListID}": {
      "get": {
        "tags": [
          "ToDoListsReferences"
        ],
        "operationId": "ToDoListsReferences_ListToDoListsReferencesByID",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "toDoListID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/todolistsreferences/create": {
      "post": {
        "tags": [
          "ToDoListsReferences"
        ],
        "operationId": "ToDoListsReferences_CreateToDoListsReferences",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "bodyData",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ToDoListsReferencesModels"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/todolistsreferences/delete/{toDoListID}": {
      "post": {
        "tags": [
          "ToDoListsReferences"
        ],
        "operationId": "ToDoListsReferences_DeleteToDoListsReferences",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "toDoListID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "bodyData",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ListToDoListsReferences"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/todoliststatics/category/getstatistics": {
      "get": {
        "tags": [
          "ToDoListStatistics"
        ],
        "operationId": "ToDoListStatistics_GetToDoListStatisticsCategory",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "categoryID",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/todoliststatics/category/searchlisttodostatistics": {
      "get": {
        "tags": [
          "ToDoListStatistics"
        ],
        "operationId": "ToDoListStatistics_SearchListToDoListsStatisticsCategory",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "categoryID",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/todoliststatics/kpi/getstatistics": {
      "get": {
        "tags": [
          "ToDoListStatistics"
        ],
        "operationId": "ToDoListStatistics_GetToDoListStatisticsKPI",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "timeStart",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "timeEnd",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "strStaffIDs",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/todoliststatics/kpi/searchlisttodostatistics": {
      "get": {
        "tags": [
          "ToDoListStatistics"
        ],
        "operationId": "ToDoListStatistics_SearchListToDoListsStatisticsKPI",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "timeStart",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "timeEnd",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "strStaffIDs",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/todoliststatics/gettodolistpercent/{toDoListID}": {
      "get": {
        "tags": [
          "ToDoListStatistics"
        ],
        "operationId": "ToDoListStatistics_GetToDoListStatictisDetailPercent",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "toDoListID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/todolisttimeline/searchtimelines": {
      "get": {
        "tags": [
          "ToDoListTimeLine"
        ],
        "operationId": "ToDoListTimeLine_SearchToDoListsTimeLines",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "strCategoryIDs",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "timeStart",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "timeEnd",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/trackingbill/search-drop-down-list": {
      "get": {
        "tags": [
          "TrackingBill"
        ],
        "operationId": "TrackingBill_SearchDropdownList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "keySearch",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/trackingbill/get-tracking-bill-lastest": {
      "get": {
        "tags": [
          "TrackingBill"
        ],
        "operationId": "TrackingBill_TrackingBillLatest",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/trackingbill/report-tracking-bill-search": {
      "get": {
        "tags": [
          "TrackingBill"
        ],
        "operationId": "TrackingBill_ReportTrackingBillSearch",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "timeStart",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "timeEnd",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "projectID",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "providerID",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "typeTrackingBillID",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "typeVehicleID",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "deliveryVehicleID",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "keySearch",
            "in": "query",
            "required": false,
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/trackingbill/list-tracking-bill-search": {
      "get": {
        "tags": [
          "TrackingBill"
        ],
        "operationId": "TrackingBill_ListTrackingSearchBill",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "timeStart",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "timeEnd",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "projectID",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "providerID",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "typeTrackingBillID",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "typeVehicleID",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "deliveryVehicleID",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "keySearch",
            "in": "query",
            "required": false,
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/trackingbill/drop-down-list-tracking": {
      "get": {
        "tags": [
          "TrackingBill"
        ],
        "operationId": "TrackingBill_GetDropDownListTracking",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/trackingbill/traking-by-id/{trakingBillID}": {
      "get": {
        "tags": [
          "TrackingBill"
        ],
        "operationId": "TrackingBill_getTrackingBillByID",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "trakingBillID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/trackingbill/create-tracking-bill": {
      "post": {
        "tags": [
          "TrackingBill"
        ],
        "operationId": "TrackingBill_CreateTrackingBill",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateTrackingBillModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/trackingbill/update-tracking-bill/{trackingBillID}": {
      "put": {
        "tags": [
          "TrackingBill"
        ],
        "operationId": "TrackingBill_UpdateTrackingBill",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "trackingBillID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateTrackingBillModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/trackingbill/search": {
      "get": {
        "tags": [
          "TrackingBill"
        ],
        "operationId": "TrackingBill_SearchTrackingbill",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "keyword",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/trackingbill/update-check-status/{trackingBillID}": {
      "put": {
        "tags": [
          "TrackingBill"
        ],
        "operationId": "TrackingBill_UpdateCheckStatus",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "trackingBillID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateTrackingBillModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/trackingbill/update-approve-status/{trackingBillID}": {
      "put": {
        "tags": [
          "TrackingBill"
        ],
        "operationId": "TrackingBill_UpdateApproveStatus",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "trackingBillID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateTrackingBillModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/trackingbill/download-tracking-bill": {
      "get": {
        "tags": [
          "TrackingBill"
        ],
        "operationId": "TrackingBill_DownloadReport",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "trackingBillID",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/trackingbill/view-tracking-bill": {
      "get": {
        "tags": [
          "TrackingBill"
        ],
        "operationId": "TrackingBill_ViewPdf",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "trackingBillID",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/trackingbill/list-export-excel": {
      "get": {
        "tags": [
          "TrackingBill"
        ],
        "operationId": "TrackingBill_getTrackingBillExcel",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "timeStart",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "timeEnd",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/trackingbill/get-title": {
      "get": {
        "tags": [
          "TrackingBill"
        ],
        "operationId": "TrackingBill_GetTitle",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "projectID",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "typeTrackingBillID",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "deliveryVehicleID",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "isFirst",
            "in": "query",
            "required": true,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/trackingbill/delete-trackingbill-by-id/{trackingBillID}": {
      "post": {
        "tags": [
          "TrackingBill"
        ],
        "operationId": "TrackingBill_DeleteTrackingBill",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "trackingBillID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/transaction/listexpenses": {
      "get": {
        "tags": [
          "Transaction"
        ],
        "operationId": "Transaction_ListExpenses",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "todoListID",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/transaction/listincomes": {
      "get": {
        "tags": [
          "Transaction"
        ],
        "operationId": "Transaction_ListIncomes",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "todoListID",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/transaction/gettransactionexpensesbyid/{transactionID}": {
      "get": {
        "tags": [
          "Transaction"
        ],
        "operationId": "Transaction_GetExpensesByID",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "transactionID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/transaction/gettransactionincomesbyid/{transactionID}": {
      "get": {
        "tags": [
          "Transaction"
        ],
        "operationId": "Transaction_GetIncomesByID",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "transactionID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/transaction/createincometransaction": {
      "post": {
        "tags": [
          "Transaction"
        ],
        "operationId": "Transaction_CreateIncomeTransaction",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "dataCreate",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IncomeTransactionModelCreate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/transaction/createexpensetransaction": {
      "post": {
        "tags": [
          "Transaction"
        ],
        "operationId": "Transaction_CreateExpenseTransaction",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "dataCreate",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExpenseTransactionModelCreate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/transaction/updateincometransaction/{transactionID}": {
      "post": {
        "tags": [
          "Transaction"
        ],
        "operationId": "Transaction_UpdateIncomeTransaction",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "transactionID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "dataUpdate",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IncomeTransactionModelUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/transaction/updateexpensetransaction/{transactionID}": {
      "post": {
        "tags": [
          "Transaction"
        ],
        "operationId": "Transaction_UpdateExpenseTransaction",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "transactionID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "dataUpdate",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExpenseTransactionModelUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/transaction/delete/{transactionID}": {
      "post": {
        "tags": [
          "Transaction"
        ],
        "operationId": "Transaction_DeleteTransaction",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "transactionID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/transactiongroup/searchlisttransactiongroup": {
      "get": {
        "tags": [
          "TransactionGroup"
        ],
        "operationId": "TransactionGroup_SearchListTransactionGroup",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "keySearch",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/transactiongroup/create": {
      "post": {
        "tags": [
          "TransactionGroup"
        ],
        "operationId": "TransactionGroup_CreateTransactionGroup",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "dataCreate",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TransactionGroupModelCreate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/transactiongroup/update/{transactiongroupID}": {
      "post": {
        "tags": [
          "TransactionGroup"
        ],
        "operationId": "TransactionGroup_UpdateTransactionGroup",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "dataCreate",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TransactionGroupModelUpdate"
            }
          },
          {
            "name": "transactiongroupID",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/transactiongroup/delete/{transactiongroupID}": {
      "post": {
        "tags": [
          "TransactionGroup"
        ],
        "operationId": "TransactionGroup_DeleteTransactionGroup",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "transactiongroupID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/typetrackingbill/search-drop-down-list": {
      "get": {
        "tags": [
          "TypeTrackingBill"
        ],
        "operationId": "TypeTrackingBill_SearchDropdownList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "keySearch",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/typetrackingbill/list-type-tracking-bill": {
      "get": {
        "tags": [
          "TypeTrackingBill"
        ],
        "operationId": "TypeTrackingBill_ListTypeTrackingBill",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "keySearch",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/typetrackingbill/drop-down-list-type-tracking": {
      "get": {
        "tags": [
          "TypeTrackingBill"
        ],
        "operationId": "TypeTrackingBill_GetDropDownListTracking",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/typetrackingbill/type-tracking-by-id/{typeTrackingBillID}": {
      "get": {
        "tags": [
          "TypeTrackingBill"
        ],
        "operationId": "TypeTrackingBill_getTypeTrackingBillByID",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "typeTrackingBillID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/typetrackingbill/create-type-tracking-bill": {
      "post": {
        "tags": [
          "TypeTrackingBill"
        ],
        "operationId": "TypeTrackingBill_CreateTypeTrackingBill",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateTypeTrackingBillModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/typetrackingbill/update-type-tracking-bill/{typeTrackingBillID}": {
      "put": {
        "tags": [
          "TypeTrackingBill"
        ],
        "operationId": "TypeTrackingBill_UpdateTypeTrackingBill",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "typeTrackingBillID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateTypeTrackingBillModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/typetrackingbill/search": {
      "get": {
        "tags": [
          "TypeTrackingBill"
        ],
        "operationId": "TypeTrackingBill_SearchTypeTrackingbill",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "keyword",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/typetrackingbill/delete-type-tracking-bill/{typeTrackingBillID}": {
      "post": {
        "tags": [
          "TypeTrackingBill"
        ],
        "operationId": "TypeTrackingBill_DeleteTypeTrackingBill",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "typeTrackingBillID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/typevehicles/list": {
      "get": {
        "tags": [
          "TypeVehicles"
        ],
        "operationId": "TypeVehicles_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "searchModel.typeName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchModel.page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "searchModel.pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/typevehicles/get/{typeVehicleID}": {
      "get": {
        "tags": [
          "TypeVehicles"
        ],
        "operationId": "TypeVehicles_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "typeVehicleID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/typevehicles/create": {
      "post": {
        "tags": [
          "TypeVehicles"
        ],
        "operationId": "TypeVehicles_Create",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "createModel",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TypeVehiclesCreateModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/typevehicles/update": {
      "put": {
        "tags": [
          "TypeVehicles"
        ],
        "operationId": "TypeVehicles_Update",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "updateModel",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TypeVehiclesUpdateModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/typevehicles/delete/{typeVehicleID}": {
      "post": {
        "tags": [
          "TypeVehicles"
        ],
        "operationId": "TypeVehicles_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "typeVehicleID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/typevehicles/all": {
      "get": {
        "tags": [
          "TypeVehicles"
        ],
        "operationId": "TypeVehicles_GetAll",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/typevehicles/search": {
      "get": {
        "tags": [
          "TypeVehicles"
        ],
        "operationId": "TypeVehicles_Search",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "keyword",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/typevehicles/count": {
      "get": {
        "tags": [
          "TypeVehicles"
        ],
        "operationId": "TypeVehicles_GetCount",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/typeworkflow/listtypeworkflow": {
      "get": {
        "tags": [
          "TypeWorkFlow"
        ],
        "operationId": "TypeWorkFlow_ListTypeWorkFlow",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/typeworkflow/listtypeWorkflowsearch": {
      "get": {
        "tags": [
          "TypeWorkFlow"
        ],
        "operationId": "TypeWorkFlow_ListTypeWorkFlowSearch",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "keySearch",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "statusID",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/typeworkflow/GetListTypeWorkflowRelatedByMe": {
      "get": {
        "tags": [
          "TypeWorkFlow"
        ],
        "operationId": "TypeWorkFlow_GetListTypeWorkflowRelatedByMe",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/typeworkflow/gettypeworkflowbyid/{typeWorkFlowID}": {
      "get": {
        "tags": [
          "TypeWorkFlow"
        ],
        "operationId": "TypeWorkFlow_GetTypeWorkFlowbyID",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "typeWorkFlowID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/typeworkflow/createtypeworkflow": {
      "post": {
        "tags": [
          "TypeWorkFlow"
        ],
        "operationId": "TypeWorkFlow_CreatetypeWorkFlow",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TypeWorkFlowModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/typeworkflow/updatetypeworkflow/{typeWorkFlowID}": {
      "put": {
        "tags": [
          "TypeWorkFlow"
        ],
        "operationId": "TypeWorkFlow_UpdateTypeWorkFlow",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "typeWorkFlowID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TypeWorkFlowModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/typeworkflow/updatestatustypeworkflow/{typeWorkFlowID}": {
      "put": {
        "tags": [
          "TypeWorkFlow"
        ],
        "operationId": "TypeWorkFlow_UpdateStatusTypeWorkFlow",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "typeWorkFlowID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/typeworkflowispublic/searchlisttypeworkflowispublic": {
      "get": {
        "tags": [
          "TypeWorkFlow"
        ],
        "operationId": "TypeWorkFlow_SearchListTypeWorkFlowIsPublic",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "keySearch",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/typeworkflowispublic/install/{typeWorkFlowID}": {
      "post": {
        "tags": [
          "TypeWorkFlow"
        ],
        "operationId": "TypeWorkFlow_InstallPublicTypeWorkFlowByID",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "typeWorkFlowID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/typeworkflowispublic/updatetype/{typeWorkFlowID}": {
      "put": {
        "tags": [
          "TypeWorkFlow"
        ],
        "operationId": "TypeWorkFlow_UpdatePublicStatusTypeWorkFlowByID",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "typeWorkFlowID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "isPublic",
            "in": "query",
            "required": true,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/typeworkflowispublic/installed/searchlisttypeworkflowispublic": {
      "get": {
        "tags": [
          "TypeWorkFlow"
        ],
        "operationId": "TypeWorkFlow_SearchListTypeWorkFlowIsPublicInstalled",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/workflowconfig/listworkflowconfigbytypeid/{typeWorkFlowID}": {
      "get": {
        "tags": [
          "TypeWorkFlow"
        ],
        "operationId": "TypeWorkFlow_ListWorkFlowConfigByTypeID",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "typeWorkFlowID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/workflowconfig/createworkflowconfig": {
      "post": {
        "tags": [
          "TypeWorkFlow"
        ],
        "operationId": "TypeWorkFlow_CreateWorkFlowConfig",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkFlowConfigModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/workflowconfig/getworkflowconfigbyid/{configID}": {
      "get": {
        "tags": [
          "TypeWorkFlow"
        ],
        "operationId": "TypeWorkFlow_GetWorkFlowConfigbyID",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "configID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/workflowconfig/updateworkflowconfig/{configID}": {
      "put": {
        "tags": [
          "TypeWorkFlow"
        ],
        "operationId": "TypeWorkFlow_UpdateWorkFlowConfig",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "configID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkFlowConfigModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/workflowconfig/updatestatusworkflowconfig/{configID}": {
      "put": {
        "tags": [
          "TypeWorkFlow"
        ],
        "operationId": "TypeWorkFlow_UpdateStatusWorkFlowConfig",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "configID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/unit/getlistunit": {
      "get": {
        "tags": [
          "Unit"
        ],
        "operationId": "Unit_GetListUnit",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/usertypes/count": {
      "get": {
        "tags": [
          "UserTypes"
        ],
        "operationId": "UserTypes_GetTotalStaffInfor",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/usertypes/listusertype": {
      "get": {
        "tags": [
          "UserTypes"
        ],
        "operationId": "UserTypes_GetListUserType",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "statusID",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/usertypes/usertypebyid/{usertypeID}": {
      "get": {
        "tags": [
          "UserTypes"
        ],
        "operationId": "UserTypes_GetUserTypeByID",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "usertypeID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/usertypes/createusertype": {
      "post": {
        "tags": [
          "UserTypes"
        ],
        "operationId": "UserTypes_PostCreateUserType",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/usertypes/updateusertype/{usertypeID}": {
      "put": {
        "tags": [
          "UserTypes"
        ],
        "operationId": "UserTypes_PutUpdateUserType",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "usertypeID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/usertypes/search": {
      "get": {
        "tags": [
          "UserTypes"
        ],
        "operationId": "UserTypes_SearchUserType",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "keyword",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/violationrule/getlistviolationrule": {
      "get": {
        "tags": [
          "ViolationRule"
        ],
        "operationId": "ViolationRule_GetListViolationRule",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/violationrule/list-paging-violation-rule": {
      "get": {
        "tags": [
          "ViolationRule"
        ],
        "operationId": "ViolationRule_ListViolationRule",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "keySearch",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/violationrule/violation-rule-by-id/{violationRuleID}": {
      "get": {
        "tags": [
          "ViolationRule"
        ],
        "operationId": "ViolationRule_getViolationRuleByID",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "violationRuleID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/violationrule/create-violation-rule": {
      "post": {
        "tags": [
          "ViolationRule"
        ],
        "operationId": "ViolationRule_CreateViolationRule",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateViolationRuleModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/violationrule/update-violation-rule/{violationRuleID}": {
      "put": {
        "tags": [
          "ViolationRule"
        ],
        "operationId": "ViolationRule_UpdateViolationRule",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "violationRuleID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateViolationRuleModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/workflow/listWorkflowsearchV2": {
      "get": {
        "tags": [
          "WorkFlow"
        ],
        "operationId": "WorkFlow_ListWorkFlowSearchV2",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "typeWorkFlowID",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "keySearch",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "statusID",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/workflow/listWorkflowsearch": {
      "get": {
        "tags": [
          "WorkFlow"
        ],
        "operationId": "WorkFlow_ListWorkFlowSearch",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "typeWorkFlowID",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "keySearch",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "statusID",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/workflow/listWorkflowneedmyapproval": {
      "get": {
        "tags": [
          "WorkFlow"
        ],
        "operationId": "WorkFlow_GetListWorkFlowNeedMyApproval",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "keySearch",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/workflow/listWorkflowapprovedbyme": {
      "get": {
        "tags": [
          "WorkFlow"
        ],
        "operationId": "WorkFlow_GetListRequestWorkFlowApprovedByMe",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "keySearch",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/workflow/listWorkflowcreatedbyme": {
      "get": {
        "tags": [
          "WorkFlow"
        ],
        "operationId": "WorkFlow_GetListRequestWorkFlowCreatedByMe",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "keySearch",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/workflow/createworkflow": {
      "post": {
        "tags": [
          "WorkFlow"
        ],
        "operationId": "WorkFlow_CreateWorkFlow",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkFlowModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/workflow/createworkflowresponseobject": {
      "post": {
        "tags": [
          "WorkFlow"
        ],
        "operationId": "WorkFlow_CreateWorkFlowResponseObject",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkFlowModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/workflow/getworkflowbyid/{workFlowID}": {
      "get": {
        "tags": [
          "WorkFlow"
        ],
        "operationId": "WorkFlow_GetWorkFlowbyID",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "workFlowID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/workflow/forwardworkflow/{workFlowID}": {
      "put": {
        "tags": [
          "WorkFlow"
        ],
        "operationId": "WorkFlow_UpdateUserForwardWorkFlow",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "workFlowID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "userForwardID",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/workflow/updateworkflow/{workFlowID}": {
      "put": {
        "tags": [
          "WorkFlow"
        ],
        "operationId": "WorkFlow_UpdateWorkFlow",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "workFlowID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkFlowModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/workflow/updatestatusworkFlow/{workFlowID}": {
      "put": {
        "tags": [
          "WorkFlow"
        ],
        "operationId": "WorkFlow_UpdateStatusWorkFlow",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "workFlowID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/workflow/createlistworkflowapproves/{workFlowID}": {
      "post": {
        "tags": [
          "WorkFlow"
        ],
        "operationId": "WorkFlow_CreateListWorkFlowApproves",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "workFlowID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "items": {
                "$ref": "#/definitions/WorkFlowApproveModel"
              },
              "xml": {
                "name": "WorkFlowApproveModel",
                "wrapped": true
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/workflow/updateworkflowisapprove": {
      "put": {
        "tags": [
          "WorkFlow"
        ],
        "operationId": "WorkFlow_UpdateWorkFlowIsApprove",
        "consumes": [
          "application/json",
          "text/json",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "workFlowApproveID",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/workflow/listworkflowapprove/{workFlowID}": {
      "get": {
        "tags": [
          "WorkFlow"
        ],
        "operationId": "WorkFlow_ListWorkFlowApprove",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "workFlowID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/workflow/deleteworkflow/{workFlowID}": {
      "put": {
        "tags": [
          "WorkFlow"
        ],
        "operationId": "WorkFlow_DeleteWorkFlowByID",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "workFlowID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/workflow/listuserinvolvedinrequest/{workFlowID}": {
      "get": {
        "tags": [
          "WorkFlow"
        ],
        "operationId": "WorkFlow_GetListUserInvolvedInRequest",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "workFlowID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "UserLoginModel": {
      "properties": {
        "StaffCode": {
          "type": "string"
        },
        "Passwords": {
          "type": "string"
        },
        "IsMobile": {
          "type": "boolean"
        }
      },
      "xml": {
        "name": "UserLoginModel"
      },
      "type": "object"
    },
    "ResetPasswordModel": {
      "properties": {
        "StaffID": {
          "type": "integer",
          "format": "int32"
        },
        "NewPassword": {
          "type": "string"
        }
      },
      "xml": {
        "name": "ResetPasswordModel"
      },
      "type": "object"
    },
    "ChangePasswordModel": {
      "properties": {
        "OldPassword": {
          "type": "string"
        },
        "NewPassword": {
          "type": "string"
        }
      },
      "xml": {
        "name": "ChangePasswordModel"
      },
      "type": "object"
    },
    "CreateBillAdvancesModel": {
      "properties": {
        "StaffIDAdvance": {
          "type": "integer",
          "format": "int32"
        },
        "ToDoListsMilestoneID": {
          "type": "integer",
          "format": "int32"
        },
        "Amount": {
          "type": "number",
          "format": "double"
        },
        "Description": {
          "type": "string"
        }
      },
      "xml": {
        "name": "CreateBillAdvancesModel"
      },
      "type": "object"
    },
    "UpdateBillAdvancesModel": {
      "properties": {
        "StaffIDAdvance": {
          "type": "integer",
          "format": "int32"
        },
        "ToDoListsMilestoneID": {
          "type": "integer",
          "format": "int32"
        },
        "Amount": {
          "type": "number",
          "format": "double"
        },
        "Description": {
          "type": "string"
        }
      },
      "xml": {
        "name": "UpdateBillAdvancesModel"
      },
      "type": "object"
    },
    "CreateBillRefundModel": {
      "properties": {
        "StaffIDAdvance": {
          "type": "integer",
          "format": "int32"
        },
        "ToDoListsMilestoneID": {
          "type": "integer",
          "format": "int32"
        },
        "Amount": {
          "type": "number",
          "format": "double"
        },
        "Description": {
          "type": "string"
        }
      },
      "xml": {
        "name": "CreateBillRefundModel"
      },
      "type": "object"
    },
    "UpdateBillRefundModel": {
      "properties": {
        "BillRefundID": {
          "type": "integer",
          "format": "int32"
        },
        "StaffIDAdvance": {
          "type": "integer",
          "format": "int32"
        },
        "ToDoListsMilestoneID": {
          "type": "integer",
          "format": "int32"
        },
        "Amount": {
          "type": "number",
          "format": "double"
        },
        "Description": {
          "type": "string"
        }
      },
      "xml": {
        "name": "UpdateBillRefundModel"
      },
      "type": "object"
    },
    "BookingCategoryModelCreate": {
      "properties": {
        "ParentCategoryNewsID": {
          "type": "integer",
          "format": "int32"
        },
        "Order": {
          "type": "integer",
          "format": "int32"
        },
        "CategoryNewsName": {
          "type": "string"
        },
        "CategoryNewsDescription": {
          "type": "string"
        }
      },
      "xml": {
        "name": "BookingCategoryModelCreate"
      },
      "type": "object"
    },
    "BookingCategoryModelUpdate": {
      "properties": {
        "ParentCategoryNewsID": {
          "type": "integer",
          "format": "int32"
        },
        "Order": {
          "type": "integer",
          "format": "int32"
        },
        "CategoryNewsName": {
          "type": "string"
        },
        "CategoryNewsDescription": {
          "type": "string"
        }
      },
      "xml": {
        "name": "BookingCategoryModelUpdate"
      },
      "type": "object"
    },
    "BookingEventModelCreate": {
      "properties": {
        "ColorCode": {
          "type": "string"
        },
        "Title": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "TimeStart": {
          "type": "string",
          "format": "date-time"
        },
        "TimeEnd": {
          "type": "string",
          "format": "date-time"
        },
        "ActionUrl": {
          "type": "string"
        },
        "Attendances": {
          "items": {
            "$ref": "#/definitions/BookingEventAttendanceListItem"
          },
          "xml": {
            "name": "BookingEventAttendanceListItem",
            "wrapped": true
          },
          "type": "array"
        },
        "Categories": {
          "items": {
            "$ref": "#/definitions/BookingEventCategoryModel"
          },
          "xml": {
            "name": "BookingEventCategoryModel",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "BookingEventModelCreate"
      },
      "type": "object"
    },
    "BookingEventAttendanceListItem": {
      "properties": {
        "AttendanceID": {
          "type": "integer",
          "format": "int32"
        },
        "StaffAttendID": {
          "type": "integer",
          "format": "int32"
        },
        "StaffAttendFullName": {
          "type": "string"
        },
        "StaffAttendAvatar": {
          "type": "string"
        },
        "StaffAttendEmail": {
          "type": "string"
        },
        "ConfirmMessage": {
          "type": "string"
        },
        "StatusID": {
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "BookingEventAttendanceListItem"
      },
      "type": "object"
    },
    "BookingEventCategoryModel": {
      "properties": {
        "BookingEventCategoryID": {
          "type": "integer",
          "format": "int32"
        },
        "BookingEventID": {
          "type": "integer",
          "format": "int32"
        },
        "CategoryNewsID": {
          "type": "integer",
          "format": "int32"
        },
        "CategoryNewsName": {
          "type": "string"
        }
      },
      "xml": {
        "name": "BookingEventCategoryModel"
      },
      "type": "object"
    },
    "BookingEventModelUpdate": {
      "properties": {
        "ColorCode": {
          "type": "string"
        },
        "Title": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "TimeStart": {
          "type": "string",
          "format": "date-time"
        },
        "TimeEnd": {
          "type": "string",
          "format": "date-time"
        },
        "ActionUrl": {
          "type": "string"
        }
      },
      "xml": {
        "name": "BookingEventModelUpdate"
      },
      "type": "object"
    },
    "BookingEventAttendanceModelCreate": {
      "properties": {
        "StaffAttendID": {
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "BookingEventAttendanceModelCreate"
      },
      "type": "object"
    },
    "BookingEventAttendanceModelUpdate": {
      "properties": {
        "StatusID": {
          "type": "integer",
          "format": "int32"
        },
        "ConfirmMessage": {
          "type": "string"
        }
      },
      "xml": {
        "name": "BookingEventAttendanceModelUpdate"
      },
      "type": "object"
    },
    "BookingTypeEventModelCreate": {
      "properties": {
        "ColorCode": {
          "type": "string"
        },
        "Title": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "Repeater": {
          "type": "string"
        }
      },
      "xml": {
        "name": "BookingTypeEventModelCreate"
      },
      "type": "object"
    },
    "BookingTypeEventModelUpdate": {
      "properties": {
        "ColorCode": {
          "type": "string"
        },
        "Title": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "Repeater": {
          "type": "string"
        }
      },
      "xml": {
        "name": "BookingTypeEventModelUpdate"
      },
      "type": "object"
    },
    "CMSCategoryNewsModel": {
      "properties": {
        "CategoryNewsID": {
          "type": "integer",
          "format": "int32"
        },
        "CategoryNewsName": {
          "type": "string"
        },
        "CategoryNewsDescription": {
          "type": "string"
        },
        "CompanyID": {
          "type": "integer",
          "format": "int32"
        },
        "CompanyName": {
          "type": "string"
        },
        "ContentTypeID": {
          "type": "integer",
          "format": "int32"
        },
        "ContentTypeName": {
          "type": "string"
        },
        "StatusID": {
          "type": "integer",
          "format": "int32"
        },
        "Order": {
          "type": "integer",
          "format": "int32"
        },
        "DateCreated": {
          "type": "string",
          "format": "date-time"
        },
        "DateUpdated": {
          "type": "string",
          "format": "date-time"
        },
        "UserCreated": {
          "type": "string"
        },
        "UserUpdated": {
          "type": "string"
        },
        "AnnounceCompanyIDs": {
          "type": "string"
        },
        "AnnounceDepartmentIDs": {
          "type": "string"
        },
        "AnnounceStaffIDs": {
          "type": "string"
        },
        "AnnounceGroupEmailIDs": {
          "type": "string"
        }
      },
      "xml": {
        "name": "CMSCategoryNewsModel"
      },
      "type": "object"
    },
    "CMSNewsModel": {
      "properties": {
        "NewsID": {
          "type": "integer",
          "format": "int32"
        },
        "CategoryNewsID": {
          "type": "integer",
          "format": "int32"
        },
        "CategoryNewsName": {
          "type": "string"
        },
        "Title": {
          "type": "string"
        },
        "StatusID": {
          "type": "integer",
          "format": "int32"
        },
        "ShortDescription": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "DateCreated": {
          "type": "string",
          "format": "date-time"
        },
        "DateUpdated": {
          "type": "string",
          "format": "date-time"
        },
        "UserCreated": {
          "type": "string"
        },
        "UserUpdated": {
          "type": "string"
        }
      },
      "xml": {
        "name": "CMSNewsModel"
      },
      "type": "object"
    },
    "RequestAttachmentModel": {
      "properties": {
        "AttachmentID": {
          "type": "integer",
          "format": "int32"
        },
        "ProcessID": {
          "type": "integer",
          "format": "int32"
        },
        "WorkFlowID": {
          "type": "integer",
          "format": "int32"
        },
        "DispatchDocumentID": {
          "type": "integer",
          "format": "int32"
        },
        "CMSNewsID": {
          "type": "integer",
          "format": "int32"
        },
        "FileName": {
          "type": "string"
        },
        "FilePath": {
          "type": "string"
        },
        "StatusID": {
          "type": "integer",
          "format": "int32"
        },
        "DateCreated": {
          "type": "string",
          "format": "date-time"
        },
        "UserCreated": {
          "type": "string"
        }
      },
      "xml": {
        "name": "RequestAttachmentModel"
      },
      "type": "object"
    },
    "CompanyPricePackageModelCreate": {
      "properties": {
        "PackageType": {
          "type": "integer",
          "format": "int32"
        },
        "MaxLoginAccounts": {
          "type": "integer",
          "format": "int32"
        },
        "MaxDriveStoragesGB": {
          "type": "integer",
          "format": "int32"
        },
        "FromDate": {
          "type": "string",
          "format": "date-time"
        },
        "ToDate": {
          "type": "string",
          "format": "date-time"
        },
        "UrlContract": {
          "type": "string"
        }
      },
      "xml": {
        "name": "CompanyPricePackageModelCreate"
      },
      "type": "object"
    },
    "CompanyPricePackageModelUpdate": {
      "properties": {
        "MaxLoginAccounts": {
          "type": "integer",
          "format": "int32"
        },
        "MaxDriveStoragesGB": {
          "type": "integer",
          "format": "int32"
        },
        "UrlContract": {
          "type": "string"
        }
      },
      "xml": {
        "name": "CompanyPricePackageModelUpdate"
      },
      "type": "object"
    },
    "CompanyRegisterModel": {
      "properties": {
        "CompanyName": {
          "type": "string"
        },
        "AdminFullName": {
          "type": "string"
        },
        "Email": {
          "type": "string"
        },
        "Password": {
          "type": "string"
        },
        "Phone": {
          "type": "string"
        }
      },
      "xml": {
        "name": "CompanyRegisterModel"
      },
      "type": "object"
    },
    "CompanyModel": {
      "properties": {
        "CompanyID": {
          "type": "integer",
          "format": "int32"
        },
        "Logo": {
          "type": "string"
        },
        "CompanyName": {
          "type": "string"
        },
        "CompanyDescription": {
          "type": "string"
        },
        "Address": {
          "type": "string"
        },
        "Phone": {
          "type": "string"
        },
        "TaxNumber": {
          "type": "string"
        },
        "StatusID": {
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "CompanyModel"
      },
      "type": "object"
    },
    "CompanyServices": {
      "properties": {
        "CompanyServiceID": {
          "type": "integer",
          "format": "int32"
        },
        "CompanyID": {
          "type": "integer",
          "format": "int32"
        },
        "ServicesID": {
          "type": "integer",
          "format": "int32"
        },
        "StatusID": {
          "type": "integer",
          "format": "int32"
        },
        "DateCreated": {
          "type": "string",
          "format": "date-time"
        },
        "DateUpdated": {
          "type": "string",
          "format": "date-time"
        },
        "UserCreated": {
          "type": "string"
        },
        "UserUpdated": {
          "type": "string"
        },
        "Companys": {
          "$ref": "#/definitions/Companys"
        },
        "Services": {
          "$ref": "#/definitions/Services"
        }
      },
      "xml": {
        "name": "CompanyServices"
      },
      "type": "object"
    },
    "Companys": {
      "properties": {
        "CompanyID": {
          "type": "integer",
          "format": "int32"
        },
        "Logo": {
          "type": "string"
        },
        "CompanyName": {
          "type": "string"
        },
        "CompanyDescription": {
          "type": "string"
        },
        "Address": {
          "type": "string"
        },
        "Phone": {
          "type": "string"
        },
        "StatusID": {
          "type": "integer",
          "format": "int32"
        },
        "DateCreated": {
          "type": "string",
          "format": "date-time"
        },
        "DateUpdated": {
          "type": "string",
          "format": "date-time"
        },
        "UserCreated": {
          "type": "string"
        },
        "UserUpdated": {
          "type": "string"
        },
        "TaxNumber": {
          "type": "string"
        },
        "CMSCategoryNews": {
          "items": {
            "$ref": "#/definitions/CMSCategoryNews"
          },
          "xml": {
            "name": "CMSCategoryNews",
            "wrapped": true
          },
          "type": "array"
        },
        "CompanyServices": {
          "items": {
            "$ref": "#/definitions/CompanyServices"
          },
          "xml": {
            "name": "CompanyServices",
            "wrapped": true
          },
          "type": "array"
        },
        "RequestProcess": {
          "items": {
            "$ref": "#/definitions/RequestProcess"
          },
          "xml": {
            "name": "RequestProcess",
            "wrapped": true
          },
          "type": "array"
        },
        "StaffInfos": {
          "items": {
            "$ref": "#/definitions/StaffInfos"
          },
          "xml": {
            "name": "StaffInfos",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "Companys"
      },
      "type": "object"
    },
    "Services": {
      "properties": {
        "ServicesID": {
          "type": "integer",
          "format": "int32"
        },
        "ServicesName": {
          "type": "string"
        },
        "ServicesDomain": {
          "type": "string"
        },
        "ServicesDescription": {
          "type": "string"
        },
        "IconName": {
          "type": "string"
        },
        "StatusID": {
          "type": "integer",
          "format": "int32"
        },
        "DateCreated": {
          "type": "string",
          "format": "date-time"
        },
        "DateUpdated": {
          "type": "string",
          "format": "date-time"
        },
        "UserCreated": {
          "type": "string"
        },
        "UserUpdated": {
          "type": "string"
        },
        "CompanyServices": {
          "items": {
            "$ref": "#/definitions/CompanyServices"
          },
          "xml": {
            "name": "CompanyServices",
            "wrapped": true
          },
          "type": "array"
        },
        "PolicyModules": {
          "items": {
            "$ref": "#/definitions/PolicyModules"
          },
          "xml": {
            "name": "PolicyModules",
            "wrapped": true
          },
          "type": "array"
        },
        "ToDoListsAttachments": {
          "items": {
            "$ref": "#/definitions/ToDoListsAttachments"
          },
          "xml": {
            "name": "ToDoListsAttachments",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "Services"
      },
      "type": "object"
    },
    "CMSCategoryNews": {
      "properties": {
        "CategoryNewsID": {
          "type": "integer",
          "format": "int32"
        },
        "CompanyID": {
          "type": "integer",
          "format": "int32"
        },
        "ContentTypeID": {
          "type": "integer",
          "format": "int32"
        },
        "StatusID": {
          "type": "integer",
          "format": "int32"
        },
        "CategoryNewsName": {
          "type": "string"
        },
        "CategoryNewsDescription": {
          "type": "string"
        },
        "DateCreated": {
          "type": "string",
          "format": "date-time"
        },
        "DateUpdated": {
          "type": "string",
          "format": "date-time"
        },
        "UserCreated": {
          "type": "string"
        },
        "UserUpdated": {
          "type": "string"
        },
        "Order": {
          "type": "integer",
          "format": "int32"
        },
        "ParentCategoryNewsID": {
          "type": "integer",
          "format": "int32"
        },
        "BookingEventCategory": {
          "items": {
            "$ref": "#/definitions/BookingEventCategory"
          },
          "xml": {
            "name": "BookingEventCategory",
            "wrapped": true
          },
          "type": "array"
        },
        "Companys": {
          "$ref": "#/definitions/Companys"
        },
        "CMSContentTypes": {
          "$ref": "#/definitions/CMSContentTypes"
        },
        "CMSNews": {
          "items": {
            "$ref": "#/definitions/CMSNews"
          },
          "xml": {
            "name": "CMSNews",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "CMSCategoryNews"
      },
      "type": "object"
    },
    "RequestProcess": {
      "properties": {
        "ProcessID": {
          "type": "integer",
          "format": "int32"
        },
        "Title": {
          "type": "string"
        },
        "StatusID": {
          "type": "integer",
          "format": "int32"
        },
        "PriorityID": {
          "type": "integer",
          "format": "int32"
        },
        "UserPostID": {
          "type": "integer",
          "format": "int32"
        },
        "UserAssignID": {
          "type": "integer",
          "format": "int32"
        },
        "UserReferenceID": {
          "type": "integer",
          "format": "int32"
        },
        "UserForwardID": {
          "type": "integer",
          "format": "int32"
        },
        "DatePost": {
          "type": "string",
          "format": "date-time"
        },
        "DateComplete": {
          "type": "string",
          "format": "date-time"
        },
        "CompanyID": {
          "type": "integer",
          "format": "int32"
        },
        "PercentProcess": {
          "type": "integer",
          "format": "int32"
        },
        "Description": {
          "type": "string"
        },
        "DateCreated": {
          "type": "string",
          "format": "date-time"
        },
        "DateUpdated": {
          "type": "string",
          "format": "date-time"
        },
        "UserCreated": {
          "type": "string"
        },
        "UserUpdated": {
          "type": "string"
        },
        "DepartmentUserPostID": {
          "type": "integer",
          "format": "int32"
        },
        "DepartmentUserAssignID": {
          "type": "integer",
          "format": "int32"
        },
        "Companys": {
          "$ref": "#/definitions/Companys"
        },
        "RequestAttachments": {
          "items": {
            "$ref": "#/definitions/RequestAttachments"
          },
          "xml": {
            "name": "RequestAttachments",
            "wrapped": true
          },
          "type": "array"
        },
        "RequestComments": {
          "items": {
            "$ref": "#/definitions/RequestComments"
          },
          "xml": {
            "name": "RequestComments",
            "wrapped": true
          },
          "type": "array"
        },
        "RequestForwards": {
          "items": {
            "$ref": "#/definitions/RequestForwards"
          },
          "xml": {
            "name": "RequestForwards",
            "wrapped": true
          },
          "type": "array"
        },
        "Staffs": {
          "$ref": "#/definitions/Staffs"
        },
        "Supervisors": {
          "items": {
            "$ref": "#/definitions/Supervisors"
          },
          "xml": {
            "name": "Supervisors",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "RequestProcess"
      },
      "type": "object"
    },
    "StaffInfos": {
      "properties": {
        "StaffInfoID": {
          "type": "integer",
          "format": "int32"
        },
        "StaffID": {
          "type": "integer",
          "format": "int32"
        },
        "DepartmentID": {
          "type": "integer",
          "format": "int32"
        },
        "CompanyID": {
          "type": "integer",
          "format": "int32"
        },
        "PositionID": {
          "type": "integer",
          "format": "int32"
        },
        "LevelID": {
          "type": "integer",
          "format": "int32"
        },
        "IdentityCard": {
          "type": "string"
        },
        "DateIdenttity": {
          "type": "string",
          "format": "date-time"
        },
        "AreaIdentity": {
          "type": "string"
        },
        "GenderID": {
          "type": "integer",
          "format": "int32"
        },
        "Birthday": {
          "type": "string",
          "format": "date-time"
        },
        "CountryID": {
          "type": "integer",
          "format": "int32"
        },
        "LevelSpecialize": {
          "type": "string"
        },
        "ForeignLanguageID": {
          "type": "integer",
          "format": "int32"
        },
        "ComputerLevelID": {
          "type": "integer",
          "format": "int32"
        },
        "NationID": {
          "type": "integer",
          "format": "int32"
        },
        "ReligionID": {
          "type": "integer",
          "format": "int32"
        },
        "AddressLive": {
          "type": "string"
        },
        "AddressBorn": {
          "type": "string"
        },
        "Job": {
          "type": "string"
        },
        "DateJob": {
          "type": "string",
          "format": "date-time"
        },
        "NumberSocialInsurance": {
          "type": "string"
        },
        "NumberHealthInsurance": {
          "type": "string"
        },
        "CodeAreaHealthcare": {
          "type": "string"
        },
        "AreaHealthcare": {
          "type": "string"
        },
        "IsRequestApprove": {
          "type": "integer",
          "format": "int32"
        },
        "Email": {
          "type": "string"
        },
        "Phone": {
          "type": "string"
        },
        "Tel": {
          "type": "string"
        },
        "Extension": {
          "type": "string"
        },
        "InformationFamily": {
          "type": "string"
        },
        "CodeIncomeTax": {
          "type": "string"
        },
        "StatusID": {
          "type": "integer",
          "format": "int32"
        },
        "DateOff": {
          "type": "string",
          "format": "date-time"
        },
        "ReasionOff": {
          "type": "string"
        },
        "UserStaffDescription": {
          "type": "string"
        },
        "AddressWorkID": {
          "type": "integer",
          "format": "int32"
        },
        "LearningPowerID": {
          "type": "integer",
          "format": "int32"
        },
        "NameBank": {
          "type": "string"
        },
        "AccountBank": {
          "type": "string"
        },
        "PlaceBorn": {
          "type": "string"
        },
        "IncreasedDateCoverage": {
          "type": "string",
          "format": "date-time"
        },
        "DecreasedDateCoverage": {
          "type": "string",
          "format": "date-time"
        },
        "ResionWork": {
          "type": "string"
        },
        "ImagesPath": {
          "type": "string"
        },
        "DateCreated": {
          "type": "string",
          "format": "date-time"
        },
        "DateUpdated": {
          "type": "string",
          "format": "date-time"
        },
        "UserCreated": {
          "type": "string"
        },
        "UserUpdated": {
          "type": "string"
        },
        "ManagerInfoID": {
          "type": "integer",
          "format": "int32"
        },
        "IsPrimaryStaffInfo": {
          "type": "boolean"
        },
        "Companys": {
          "$ref": "#/definitions/Companys"
        },
        "Departments": {
          "$ref": "#/definitions/Departments"
        },
        "Positions": {
          "$ref": "#/definitions/Positions"
        },
        "Staffs": {
          "$ref": "#/definitions/Staffs"
        }
      },
      "xml": {
        "name": "StaffInfos"
      },
      "type": "object"
    },
    "PolicyModules": {
      "properties": {
        "PolicyModuleID": {
          "type": "integer",
          "format": "int32"
        },
        "ServicesID": {
          "type": "integer",
          "format": "int32"
        },
        "PolicyGroupModuleID": {
          "type": "integer",
          "format": "int32"
        },
        "ClaimName": {
          "type": "string"
        },
        "PolicyModuleDescription": {
          "type": "string"
        },
        "DateCreated": {
          "type": "string",
          "format": "date-time"
        },
        "DateUpdated": {
          "type": "string",
          "format": "date-time"
        },
        "UserCreated": {
          "type": "string"
        },
        "UserUpdated": {
          "type": "string"
        },
        "PolicyGroupModules": {
          "$ref": "#/definitions/PolicyGroupModules"
        },
        "Services": {
          "$ref": "#/definitions/Services"
        },
        "PolicyPermissions": {
          "items": {
            "$ref": "#/definitions/PolicyPermissions"
          },
          "xml": {
            "name": "PolicyPermissions",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "PolicyModules"
      },
      "type": "object"
    },
    "ToDoListsAttachments": {
      "properties": {
        "ToDoListsAttachmentID": {
          "type": "integer",
          "format": "int32"
        },
        "ToDoListsID": {
          "type": "integer",
          "format": "int32"
        },
        "ServiceID": {
          "type": "integer",
          "format": "int32"
        },
        "ItemID": {
          "type": "integer",
          "format": "int32"
        },
        "ItemName": {
          "type": "string"
        },
        "ItemUrl": {
          "type": "string"
        },
        "StatusID": {
          "type": "integer",
          "format": "int32"
        },
        "UserCreatedID": {
          "type": "integer",
          "format": "int32"
        },
        "UserUpdatedID": {
          "type": "integer",
          "format": "int32"
        },
        "DateCreated": {
          "type": "string",
          "format": "date-time"
        },
        "DateUpdated": {
          "type": "string",
          "format": "date-time"
        },
        "Services": {
          "$ref": "#/definitions/Services"
        },
        "ToDoLists": {
          "$ref": "#/definitions/ToDoLists"
        }
      },
      "xml": {
        "name": "ToDoListsAttachments"
      },
      "type": "object"
    },
    "BookingEventCategory": {
      "properties": {
        "BookingEventCategoryID": {
          "type": "integer",
          "format": "int32"
        },
        "BookingEventID": {
          "type": "integer",
          "format": "int32"
        },
        "CategoryNewsID": {
          "type": "integer",
          "format": "int32"
        },
        "BookingEvent": {
          "$ref": "#/definitions/BookingEvent"
        },
        "CMSCategoryNews": {
          "$ref": "#/definitions/CMSCategoryNews"
        }
      },
      "xml": {
        "name": "BookingEventCategory"
      },
      "type": "object"
    },
    "CMSContentTypes": {
      "properties": {
        "ContentTypeID": {
          "type": "integer",
          "format": "int32"
        },
        "ContentTypeName": {
          "type": "string"
        },
        "ContentTypeDescription": {
          "type": "string"
        },
        "UserCreated": {
          "type": "string"
        },
        "DateCreated": {
          "type": "string",
          "format": "date-time"
        },
        "CMSCategoryNews": {
          "items": {
            "$ref": "#/definitions/CMSCategoryNews"
          },
          "xml": {
            "name": "CMSCategoryNews",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "CMSContentTypes"
      },
      "type": "object"
    },
    "CMSNews": {
      "properties": {
        "NewsID": {
          "type": "integer",
          "format": "int32"
        },
        "CategoryNewsID": {
          "type": "integer",
          "format": "int32"
        },
        "Title": {
          "type": "string"
        },
        "StatusID": {
          "type": "integer",
          "format": "int32"
        },
        "ShortDescription": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "DateCreated": {
          "type": "string",
          "format": "date-time"
        },
        "DateUpdated": {
          "type": "string",
          "format": "date-time"
        },
        "UserCreated": {
          "type": "string"
        },
        "UserUpdated": {
          "type": "string"
        },
        "CMSCategoryNews": {
          "$ref": "#/definitions/CMSCategoryNews"
        }
      },
      "xml": {
        "name": "CMSNews"
      },
      "type": "object"
    },
    "RequestAttachments": {
      "properties": {
        "AttachmentID": {
          "type": "integer",
          "format": "int32"
        },
        "ProcessID": {
          "type": "integer",
          "format": "int32"
        },
        "WorkFlowID": {
          "type": "integer",
          "format": "int32"
        },
        "FileName": {
          "type": "string"
        },
        "FilePath": {
          "type": "string"
        },
        "StatusID": {
          "type": "integer",
          "format": "int32"
        },
        "DateCreated": {
          "type": "string",
          "format": "date-time"
        },
        "UserCreated": {
          "type": "string"
        },
        "ToDoListsID": {
          "type": "integer",
          "format": "int32"
        },
        "DispatchDocumentID": {
          "type": "integer",
          "format": "int32"
        },
        "CMSNewsID": {
          "type": "integer",
          "format": "int32"
        },
        "RequestProcess": {
          "$ref": "#/definitions/RequestProcess"
        },
        "RequestWorkFlows": {
          "$ref": "#/definitions/RequestWorkFlows"
        }
      },
      "xml": {
        "name": "RequestAttachments"
      },
      "type": "object"
    },
    "RequestComments": {
      "properties": {
        "CommentID": {
          "type": "integer",
          "format": "int32"
        },
        "WorkFlowID": {
          "type": "integer",
          "format": "int32"
        },
        "ProcessID": {
          "type": "integer",
          "format": "int32"
        },
        "StatusID": {
          "type": "integer",
          "format": "int32"
        },
        "StaffInfoID": {
          "type": "integer",
          "format": "int32"
        },
        "UserComment": {
          "type": "string"
        },
        "ContentComment": {
          "type": "string"
        },
        "DateCreated": {
          "type": "string",
          "format": "date-time"
        },
        "ToDoListsID": {
          "type": "integer",
          "format": "int32"
        },
        "DispatchDocumentID": {
          "type": "integer",
          "format": "int32"
        },
        "IsPinned": {
          "type": "boolean"
        },
        "RequestProcess": {
          "$ref": "#/definitions/RequestProcess"
        },
        "RequestWorkFlows": {
          "$ref": "#/definitions/RequestWorkFlows"
        }
      },
      "xml": {
        "name": "RequestComments"
      },
      "type": "object"
    },
    "RequestForwards": {
      "properties": {
        "ForwardID": {
          "type": "integer",
          "format": "int32"
        },
        "ProcessID": {
          "type": "integer",
          "format": "int32"
        },
        "UserForwardID": {
          "type": "integer",
          "format": "int32"
        },
        "UserReceiveID": {
          "type": "integer",
          "format": "int32"
        },
        "UserReferenceID": {
          "type": "integer",
          "format": "int32"
        },
        "StatusID": {
          "type": "integer",
          "format": "int32"
        },
        "DateCreated": {
          "type": "string",
          "format": "date-time"
        },
        "UserCreated": {
          "type": "string"
        },
        "RequestProcess": {
          "$ref": "#/definitions/RequestProcess"
        }
      },
      "xml": {
        "name": "RequestForwards"
      },
      "type": "object"
    },
    "Staffs": {
      "properties": {
        "StaffID": {
          "type": "integer",
          "format": "int32"
        },
        "UserTypeID": {
          "type": "integer",
          "format": "int32"
        },
        "CustomerID": {
          "type": "integer",
          "format": "int32"
        },
        "UserManagerID": {
          "type": "integer",
          "format": "int32"
        },
        "StaffCode": {
          "type": "string"
        },
        "Passwords": {
          "type": "string"
        },
        "FullName": {
          "type": "string"
        },
        "StatusID": {
          "type": "integer",
          "format": "int32"
        },
        "DateCreated": {
          "type": "string",
          "format": "date-time"
        },
        "DateUpdated": {
          "type": "string",
          "format": "date-time"
        },
        "UserCreated": {
          "type": "string"
        },
        "UserUpdated": {
          "type": "string"
        },
        "LastLogin": {
          "type": "string",
          "format": "date-time"
        },
        "BookingEvent": {
          "items": {
            "$ref": "#/definitions/BookingEvent"
          },
          "xml": {
            "name": "BookingEvent",
            "wrapped": true
          },
          "type": "array"
        },
        "GroupStaffs": {
          "items": {
            "$ref": "#/definitions/GroupStaffs"
          },
          "xml": {
            "name": "GroupStaffs",
            "wrapped": true
          },
          "type": "array"
        },
        "RequestProcess": {
          "items": {
            "$ref": "#/definitions/RequestProcess"
          },
          "xml": {
            "name": "RequestProcess",
            "wrapped": true
          },
          "type": "array"
        },
        "StaffInfos": {
          "items": {
            "$ref": "#/definitions/StaffInfos"
          },
          "xml": {
            "name": "StaffInfos",
            "wrapped": true
          },
          "type": "array"
        },
        "UserTypes": {
          "$ref": "#/definitions/UserTypes"
        },
        "Supervisors": {
          "items": {
            "$ref": "#/definitions/Supervisors"
          },
          "xml": {
            "name": "Supervisors",
            "wrapped": true
          },
          "type": "array"
        },
        "ToDoLists": {
          "items": {
            "$ref": "#/definitions/ToDoLists"
          },
          "xml": {
            "name": "ToDoLists",
            "wrapped": true
          },
          "type": "array"
        },
        "ToDoListsAssigns": {
          "items": {
            "$ref": "#/definitions/ToDoListsAssigns"
          },
          "xml": {
            "name": "ToDoListsAssigns",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "Staffs"
      },
      "type": "object"
    },
    "Supervisors": {
      "properties": {
        "SupervisorID": {
          "type": "integer",
          "format": "int32"
        },
        "ProcessID": {
          "type": "integer",
          "format": "int32"
        },
        "StaffID": {
          "type": "integer",
          "format": "int32"
        },
        "UserUpdated": {
          "type": "string"
        },
        "DateCreated": {
          "type": "string",
          "format": "date-time"
        },
        "DateUpdated": {
          "type": "string",
          "format": "date-time"
        },
        "UserCreated": {
          "type": "string"
        },
        "RequestProcess": {
          "$ref": "#/definitions/RequestProcess"
        },
        "Staffs": {
          "$ref": "#/definitions/Staffs"
        }
      },
      "xml": {
        "name": "Supervisors"
      },
      "type": "object"
    },
    "Departments": {
      "properties": {
        "DepartmentID": {
          "type": "integer",
          "format": "int32"
        },
        "CompanyID": {
          "type": "integer",
          "format": "int32"
        },
        "DepartmentName": {
          "type": "string"
        },
        "DepartmentDescription": {
          "type": "string"
        },
        "StatusID": {
          "type": "integer",
          "format": "int32"
        },
        "DateCreated": {
          "type": "string",
          "format": "date-time"
        },
        "DateUpdated": {
          "type": "string",
          "format": "date-time"
        },
        "UserCreated": {
          "type": "string"
        },
        "UserUpdated": {
          "type": "string"
        },
        "ParentDepartmentID": {
          "type": "integer",
          "format": "int32"
        },
        "IsRootDepartment": {
          "type": "boolean"
        },
        "StaffInfos": {
          "items": {
            "$ref": "#/definitions/StaffInfos"
          },
          "xml": {
            "name": "StaffInfos",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "Departments"
      },
      "type": "object"
    },
    "Positions": {
      "properties": {
        "PositionID": {
          "type": "integer",
          "format": "int32"
        },
        "CompanyID": {
          "type": "integer",
          "format": "int32"
        },
        "PositionName": {
          "type": "string"
        },
        "PositionDescription": {
          "type": "string"
        },
        "StatusID": {
          "type": "integer",
          "format": "int32"
        },
        "DateCreated": {
          "type": "string",
          "format": "date-time"
        },
        "DateUpdated": {
          "type": "string",
          "format": "date-time"
        },
        "UserCreated": {
          "type": "string"
        },
        "UserUpdated": {
          "type": "string"
        },
        "StaffInfos": {
          "items": {
            "$ref": "#/definitions/StaffInfos"
          },
          "xml": {
            "name": "StaffInfos",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "Positions"
      },
      "type": "object"
    },
    "PolicyGroupModules": {
      "properties": {
        "PolicyGroupModuleID": {
          "type": "integer",
          "format": "int32"
        },
        "GroupName": {
          "type": "string"
        },
        "DateCreated": {
          "type": "string",
          "format": "date-time"
        },
        "UserCreated": {
          "type": "string"
        },
        "PolicyModules": {
          "items": {
            "$ref": "#/definitions/PolicyModules"
          },
          "xml": {
            "name": "PolicyModules",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "PolicyGroupModules"
      },
      "type": "object"
    },
    "PolicyPermissions": {
      "properties": {
        "PermissionID": {
          "type": "integer",
          "format": "int32"
        },
        "PolicyModuleID": {
          "type": "integer",
          "format": "int32"
        },
        "GroupID": {
          "type": "integer",
          "format": "int32"
        },
        "StaffID": {
          "type": "integer",
          "format": "int32"
        },
        "DateCreated": {
          "type": "string",
          "format": "date-time"
        },
        "DateUpdated": {
          "type": "string",
          "format": "date-time"
        },
        "UserCreated": {
          "type": "string"
        },
        "UserUpdated": {
          "type": "string"
        },
        "PolicyModules": {
          "$ref": "#/definitions/PolicyModules"
        }
      },
      "xml": {
        "name": "PolicyPermissions"
      },
      "type": "object"
    },
    "ToDoLists": {
      "properties": {
        "ToDoListsID": {
          "type": "integer",
          "format": "int32"
        },
        "CompanyID": {
          "type": "integer",
          "format": "int32"
        },
        "ContractID": {
          "type": "integer",
          "format": "int32"
        },
        "CategoryNewsID": {
          "type": "integer",
          "format": "int32"
        },
        "Title": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "StatusID": {
          "type": "integer",
          "format": "int32"
        },
        "TimeStart": {
          "type": "string",
          "format": "date-time"
        },
        "TimeEnd": {
          "type": "string",
          "format": "date-time"
        },
        "ProgressValue": {
          "type": "integer",
          "format": "int32"
        },
        "ColorCode": {
          "type": "string"
        },
        "Amount": {
          "type": "number",
          "format": "double"
        },
        "UserCreatedID": {
          "type": "integer",
          "format": "int32"
        },
        "UserUpdatedID": {
          "type": "integer",
          "format": "int32"
        },
        "DateCreated": {
          "type": "string",
          "format": "date-time"
        },
        "DateUpdated": {
          "type": "string",
          "format": "date-time"
        },
        "IsReminded": {
          "type": "boolean"
        },
        "Staffs": {
          "$ref": "#/definitions/Staffs"
        },
        "ToDoListsAssigns": {
          "items": {
            "$ref": "#/definitions/ToDoListsAssigns"
          },
          "xml": {
            "name": "ToDoListsAssigns",
            "wrapped": true
          },
          "type": "array"
        },
        "ToDoListsAttachments": {
          "items": {
            "$ref": "#/definitions/ToDoListsAttachments"
          },
          "xml": {
            "name": "ToDoListsAttachments",
            "wrapped": true
          },
          "type": "array"
        },
        "ToDoListsMilestones": {
          "items": {
            "$ref": "#/definitions/ToDoListsMilestones"
          },
          "xml": {
            "name": "ToDoListsMilestones",
            "wrapped": true
          },
          "type": "array"
        },
        "ToDoListsReferences": {
          "items": {
            "$ref": "#/definitions/ToDoListsReferences"
          },
          "xml": {
            "name": "ToDoListsReferences",
            "wrapped": true
          },
          "type": "array"
        },
        "ToDoListTemplates": {
          "items": {
            "$ref": "#/definitions/ToDoListTemplates"
          },
          "xml": {
            "name": "ToDoListTemplates",
            "wrapped": true
          },
          "type": "array"
        },
        "Transactions": {
          "items": {
            "$ref": "#/definitions/Transactions"
          },
          "xml": {
            "name": "Transactions",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "ToDoLists"
      },
      "type": "object"
    },
    "BookingEvent": {
      "properties": {
        "EventID": {
          "type": "integer",
          "format": "int32"
        },
        "CompanyID": {
          "type": "integer",
          "format": "int32"
        },
        "Title": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "StatusID": {
          "type": "integer",
          "format": "int32"
        },
        "TimeStart": {
          "type": "string",
          "format": "date-time"
        },
        "TimeEnd": {
          "type": "string",
          "format": "date-time"
        },
        "ActionUrl": {
          "type": "string"
        },
        "ColorCode": {
          "type": "string"
        },
        "UserHostID": {
          "type": "integer",
          "format": "int32"
        },
        "UserCreatedID": {
          "type": "integer",
          "format": "int32"
        },
        "UserUpdatedID": {
          "type": "integer",
          "format": "int32"
        },
        "DateCreated": {
          "type": "string",
          "format": "date-time"
        },
        "DateUpdated": {
          "type": "string",
          "format": "date-time"
        },
        "IsReminded": {
          "type": "boolean"
        },
        "Staffs": {
          "$ref": "#/definitions/Staffs"
        },
        "BookingEventAttendance": {
          "items": {
            "$ref": "#/definitions/BookingEventAttendance"
          },
          "xml": {
            "name": "BookingEventAttendance",
            "wrapped": true
          },
          "type": "array"
        },
        "BookingEventCategory": {
          "items": {
            "$ref": "#/definitions/BookingEventCategory"
          },
          "xml": {
            "name": "BookingEventCategory",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "BookingEvent"
      },
      "type": "object"
    },
    "RequestWorkFlows": {
      "properties": {
        "WorkFlowID": {
          "type": "integer",
          "format": "int32"
        },
        "IsDetailList": {
          "type": "integer",
          "format": "int32"
        },
        "TypeWorkFlowID": {
          "type": "integer",
          "format": "int32"
        },
        "Title": {
          "type": "string"
        },
        "FieldDetails": {
          "type": "string"
        },
        "UserRequirementID": {
          "type": "integer",
          "format": "int32"
        },
        "StatusID": {
          "type": "integer",
          "format": "int32"
        },
        "DateCreated": {
          "type": "string",
          "format": "date-time"
        },
        "DateUpdated": {
          "type": "string",
          "format": "date-time"
        },
        "UserCreated": {
          "type": "string"
        },
        "UserUpdated": {
          "type": "string"
        },
        "RequestAttachments": {
          "items": {
            "$ref": "#/definitions/RequestAttachments"
          },
          "xml": {
            "name": "RequestAttachments",
            "wrapped": true
          },
          "type": "array"
        },
        "RequestComments": {
          "items": {
            "$ref": "#/definitions/RequestComments"
          },
          "xml": {
            "name": "RequestComments",
            "wrapped": true
          },
          "type": "array"
        },
        "RequestWorkFlowApproves": {
          "items": {
            "$ref": "#/definitions/RequestWorkFlowApproves"
          },
          "xml": {
            "name": "RequestWorkFlowApproves",
            "wrapped": true
          },
          "type": "array"
        },
        "RequestWorkFlowDetails": {
          "items": {
            "$ref": "#/definitions/RequestWorkFlowDetails"
          },
          "xml": {
            "name": "RequestWorkFlowDetails",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "RequestWorkFlows"
      },
      "type": "object"
    },
    "GroupStaffs": {
      "properties": {
        "GroupStaffID": {
          "type": "integer",
          "format": "int32"
        },
        "GroupID": {
          "type": "integer",
          "format": "int32"
        },
        "StaffID": {
          "type": "integer",
          "format": "int32"
        },
        "StatusID": {
          "type": "integer",
          "format": "int32"
        },
        "DateCreated": {
          "type": "string",
          "format": "date-time"
        },
        "DateUpdated": {
          "type": "string",
          "format": "date-time"
        },
        "UserCreated": {
          "type": "string"
        },
        "UserUpdated": {
          "type": "string"
        },
        "Groups": {
          "$ref": "#/definitions/Groups"
        },
        "Staffs": {
          "$ref": "#/definitions/Staffs"
        }
      },
      "xml": {
        "name": "GroupStaffs"
      },
      "type": "object"
    },
    "UserTypes": {
      "properties": {
        "UserTypeID": {
          "type": "integer",
          "format": "int32"
        },
        "UserTypeName": {
          "type": "string"
        },
        "UserTypeDescription": {
          "type": "string"
        },
        "DateCreated": {
          "type": "string",
          "format": "date-time"
        },
        "DateUpdated": {
          "type": "string",
          "format": "date-time"
        },
        "UserCreated": {
          "type": "string"
        },
        "UserUpdated": {
          "type": "string"
        },
        "Staffs": {
          "items": {
            "$ref": "#/definitions/Staffs"
          },
          "xml": {
            "name": "Staffs",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "UserTypes"
      },
      "type": "object"
    },
    "ToDoListsAssigns": {
      "properties": {
        "ToDoListsAssignID": {
          "type": "integer",
          "format": "int32"
        },
        "ToDoListsID": {
          "type": "integer",
          "format": "int32"
        },
        "StaffAssignID": {
          "type": "integer",
          "format": "int32"
        },
        "StatusID": {
          "type": "integer",
          "format": "int32"
        },
        "DateCreated": {
          "type": "string",
          "format": "date-time"
        },
        "DateUpdated": {
          "type": "string",
          "format": "date-time"
        },
        "ProductInChargeID": {
          "type": "integer",
          "format": "int32"
        },
        "IsConfirmed": {
          "type": "integer",
          "format": "int32"
        },
        "IsSucceed": {
          "type": "integer",
          "format": "int32"
        },
        "IsAccepted": {
          "type": "integer",
          "format": "int32"
        },
        "Staffs": {
          "$ref": "#/definitions/Staffs"
        },
        "ToDoLists": {
          "$ref": "#/definitions/ToDoLists"
        }
      },
      "xml": {
        "name": "ToDoListsAssigns"
      },
      "type": "object"
    },
    "ToDoListsMilestones": {
      "properties": {
        "ToDoListsMilestoneID": {
          "type": "integer",
          "format": "int32"
        },
        "ToDoListsID": {
          "type": "integer",
          "format": "int32"
        },
        "Title": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "StatusID": {
          "type": "integer",
          "format": "int32"
        },
        "UserCreatedID": {
          "type": "integer",
          "format": "int32"
        },
        "UserUpdatedID": {
          "type": "integer",
          "format": "int32"
        },
        "DateCreated": {
          "type": "string",
          "format": "date-time"
        },
        "DateUpdated": {
          "type": "string",
          "format": "date-time"
        },
        "StaffAssignID": {
          "type": "integer",
          "format": "int32"
        },
        "Amount": {
          "type": "number",
          "format": "double"
        },
        "TimeStart": {
          "type": "string",
          "format": "date-time"
        },
        "TimeEnd": {
          "type": "string",
          "format": "date-time"
        },
        "ProgressValue": {
          "type": "integer",
          "format": "int32"
        },
        "ToDoLists": {
          "$ref": "#/definitions/ToDoLists"
        },
        "BillAdvances": {
          "items": {
            "$ref": "#/definitions/BillAdvances"
          },
          "xml": {
            "name": "BillAdvances",
            "wrapped": true
          },
          "type": "array"
        },
        "BillRefunds": {
          "items": {
            "$ref": "#/definitions/BillRefunds"
          },
          "xml": {
            "name": "BillRefunds",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "ToDoListsMilestones"
      },
      "type": "object"
    },
    "ToDoListsReferences": {
      "properties": {
        "ToDoListsReferenceID": {
          "type": "integer",
          "format": "int32"
        },
        "ToDoListsID": {
          "type": "integer",
          "format": "int32"
        },
        "StaffAssignID": {
          "type": "integer",
          "format": "int32"
        },
        "StatusID": {
          "type": "integer",
          "format": "int32"
        },
        "DateCreated": {
          "type": "string",
          "format": "date-time"
        },
        "DateUpdated": {
          "type": "string",
          "format": "date-time"
        },
        "ToDoLists": {
          "$ref": "#/definitions/ToDoLists"
        }
      },
      "xml": {
        "name": "ToDoListsReferences"
      },
      "type": "object"
    },
    "ToDoListTemplates": {
      "properties": {
        "ToDoListTemplateID": {
          "type": "integer",
          "format": "int32"
        },
        "ToDoListID": {
          "type": "integer",
          "format": "int32"
        },
        "CompanyID": {
          "type": "integer",
          "format": "int32"
        },
        "TemplateName": {
          "type": "string"
        },
        "TemplateDescription": {
          "type": "string"
        },
        "StatusID": {
          "type": "integer",
          "format": "int32"
        },
        "UserCreatedID": {
          "type": "integer",
          "format": "int32"
        },
        "UserUpdatedID": {
          "type": "integer",
          "format": "int32"
        },
        "DateCreated": {
          "type": "string",
          "format": "date-time"
        },
        "DateUpdated": {
          "type": "string",
          "format": "date-time"
        },
        "ToDoLists": {
          "$ref": "#/definitions/ToDoLists"
        }
      },
      "xml": {
        "name": "ToDoListTemplates"
      },
      "type": "object"
    },
    "Transactions": {
      "properties": {
        "TransactionID": {
          "type": "integer",
          "format": "int32"
        },
        "CompanyID": {
          "type": "integer",
          "format": "int32"
        },
        "ToDoListID": {
          "type": "integer",
          "format": "int32"
        },
        "ProductID": {
          "type": "integer",
          "format": "int32"
        },
        "TransactionGroupID": {
          "type": "integer",
          "format": "int32"
        },
        "TypeTransactionID": {
          "type": "integer",
          "format": "int32"
        },
        "TransactionName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "Amount": {
          "type": "number",
          "format": "double"
        },
        "UserCreatedID": {
          "type": "integer",
          "format": "int32"
        },
        "UserUpdatedID": {
          "type": "integer",
          "format": "int32"
        },
        "DateCreated": {
          "type": "string",
          "format": "date-time"
        },
        "DateUpdated": {
          "type": "string",
          "format": "date-time"
        },
        "StatusID": {
          "type": "integer",
          "format": "int32"
        },
        "ToDoLists": {
          "$ref": "#/definitions/ToDoLists"
        },
        "TransactionGroups": {
          "$ref": "#/definitions/TransactionGroups"
        }
      },
      "xml": {
        "name": "Transactions"
      },
      "type": "object"
    },
    "BookingEventAttendance": {
      "properties": {
        "AttendanceID": {
          "type": "integer",
          "format": "int32"
        },
        "EventID": {
          "type": "integer",
          "format": "int32"
        },
        "StaffAttendID": {
          "type": "integer",
          "format": "int32"
        },
        "StatusID": {
          "type": "integer",
          "format": "int32"
        },
        "ConfirmMessage": {
          "type": "string"
        },
        "DateCreated": {
          "type": "string",
          "format": "date-time"
        },
        "DateUpdated": {
          "type": "string",
          "format": "date-time"
        },
        "UserCreatedID": {
          "type": "integer",
          "format": "int32"
        },
        "UserUpdatedID": {
          "type": "integer",
          "format": "int32"
        },
        "BookingEvent": {
          "$ref": "#/definitions/BookingEvent"
        }
      },
      "xml": {
        "name": "BookingEventAttendance"
      },
      "type": "object"
    },
    "RequestWorkFlowApproves": {
      "properties": {
        "WorkFlowApproveID": {
          "type": "integer",
          "format": "int32"
        },
        "SectionName": {
          "type": "string"
        },
        "WorkFlowID": {
          "type": "integer",
          "format": "int32"
        },
        "UserApproveID": {
          "type": "integer",
          "format": "int32"
        },
        "UserForwardID": {
          "type": "integer",
          "format": "int32"
        },
        "DateApprove": {
          "type": "string",
          "format": "date-time"
        },
        "IsApprove": {
          "type": "integer",
          "format": "int32"
        },
        "StatusID": {
          "type": "integer",
          "format": "int32"
        },
        "DateCreated": {
          "type": "string",
          "format": "date-time"
        },
        "UserCreated": {
          "type": "string"
        },
        "DateUpdated": {
          "type": "string",
          "format": "date-time"
        },
        "UserUpdated": {
          "type": "string"
        },
        "RequestWorkFlows": {
          "$ref": "#/definitions/RequestWorkFlows"
        }
      },
      "xml": {
        "name": "RequestWorkFlowApproves"
      },
      "type": "object"
    },
    "RequestWorkFlowDetails": {
      "properties": {
        "WorkFlowDetailID": {
          "type": "integer",
          "format": "int32"
        },
        "WorkFlowID": {
          "type": "integer",
          "format": "int32"
        },
        "Contents": {
          "type": "string"
        },
        "Quanlity": {
          "type": "number",
          "format": "double"
        },
        "Amount": {
          "type": "number",
          "format": "double"
        },
        "Notes": {
          "type": "string"
        },
        "DateCreated": {
          "type": "string",
          "format": "date-time"
        },
        "UserCreated": {
          "type": "string"
        },
        "DateUpdated": {
          "type": "string",
          "format": "date-time"
        },
        "UserUpdated": {
          "type": "string"
        },
        "RequestWorkFlows": {
          "$ref": "#/definitions/RequestWorkFlows"
        }
      },
      "xml": {
        "name": "RequestWorkFlowDetails"
      },
      "type": "object"
    },
    "Groups": {
      "properties": {
        "GroupID": {
          "type": "integer",
          "format": "int32"
        },
        "CompanyID": {
          "type": "integer",
          "format": "int32"
        },
        "GroupName": {
          "type": "string"
        },
        "GroupDescription": {
          "type": "string"
        },
        "StatusID": {
          "type": "integer",
          "format": "int32"
        },
        "DateCreated": {
          "type": "string",
          "format": "date-time"
        },
        "DateUpdated": {
          "type": "string",
          "format": "date-time"
        },
        "UserCreated": {
          "type": "string"
        },
        "UserUpdated": {
          "type": "string"
        },
        "GroupStaffs": {
          "items": {
            "$ref": "#/definitions/GroupStaffs"
          },
          "xml": {
            "name": "GroupStaffs",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "Groups"
      },
      "type": "object"
    },
    "BillAdvances": {
      "properties": {
        "BillAdvanceID": {
          "type": "integer",
          "format": "int32"
        },
        "StaffIDAdvance": {
          "type": "integer",
          "format": "int32"
        },
        "ToDoListsMilestoneID": {
          "type": "integer",
          "format": "int32"
        },
        "StaffIDManager": {
          "type": "integer",
          "format": "int32"
        },
        "Amount": {
          "type": "number",
          "format": "double"
        },
        "Description": {
          "type": "string"
        },
        "DateUpdated": {
          "type": "string",
          "format": "date-time"
        },
        "UserCreatedID": {
          "type": "integer",
          "format": "int32"
        },
        "UserUpdatedID": {
          "type": "integer",
          "format": "int32"
        },
        "DateCreated": {
          "type": "string",
          "format": "date-time"
        },
        "ToDoListsMilestones": {
          "$ref": "#/definitions/ToDoListsMilestones"
        }
      },
      "xml": {
        "name": "BillAdvances"
      },
      "type": "object"
    },
    "BillRefunds": {
      "properties": {
        "BillRefundID": {
          "type": "integer",
          "format": "int32"
        },
        "StaffIDAdvance": {
          "type": "integer",
          "format": "int32"
        },
        "ToDoListsMilestoneID": {
          "type": "integer",
          "format": "int32"
        },
        "StaffIDManager": {
          "type": "integer",
          "format": "int32"
        },
        "Amount": {
          "type": "number",
          "format": "double"
        },
        "Description": {
          "type": "string"
        },
        "DateUpdated": {
          "type": "string",
          "format": "date-time"
        },
        "UserCreatedID": {
          "type": "integer",
          "format": "int32"
        },
        "UserUpdatedID": {
          "type": "integer",
          "format": "int32"
        },
        "DateCreated": {
          "type": "string",
          "format": "date-time"
        },
        "ToDoListsMilestones": {
          "$ref": "#/definitions/ToDoListsMilestones"
        }
      },
      "xml": {
        "name": "BillRefunds"
      },
      "type": "object"
    },
    "TransactionGroups": {
      "properties": {
        "TransactionGroupID": {
          "type": "integer",
          "format": "int32"
        },
        "CompanyID": {
          "type": "integer",
          "format": "int32"
        },
        "Name": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "UserCreatedID": {
          "type": "integer",
          "format": "int32"
        },
        "UserUpdatedID": {
          "type": "integer",
          "format": "int32"
        },
        "DateCreated": {
          "type": "string",
          "format": "date-time"
        },
        "DateUpdated": {
          "type": "string",
          "format": "date-time"
        },
        "StatusID": {
          "type": "integer",
          "format": "int32"
        },
        "Transactions": {
          "items": {
            "$ref": "#/definitions/Transactions"
          },
          "xml": {
            "name": "Transactions",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "TransactionGroups"
      },
      "type": "object"
    },
    "CompanyServicesModel": {
      "properties": {
        "CompanyServiceID": {
          "type": "integer",
          "format": "int32"
        },
        "CompanyID": {
          "type": "integer",
          "format": "int32"
        },
        "ServicesID": {
          "type": "integer",
          "format": "int32"
        },
        "StatusID": {
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "CompanyServicesModel"
      },
      "type": "object"
    },
    "ConfigsModel": {
      "properties": {
        "ConfigID": {
          "type": "integer",
          "format": "int32"
        },
        "StatusID": {
          "type": "integer",
          "format": "int32"
        },
        "ConfigKey": {
          "type": "string"
        },
        "ConfigValue": {
          "type": "string"
        },
        "DateCreated": {
          "type": "string",
          "format": "date-time"
        },
        "DateUpdated": {
          "type": "string",
          "format": "date-time"
        },
        "UserCreated": {
          "type": "string"
        },
        "UserUpdated": {
          "type": "string"
        },
        "TypeValue": {
          "type": "string"
        }
      },
      "xml": {
        "name": "ConfigsModel"
      },
      "type": "object"
    },
    "Contracts": {
      "properties": {
        "ContractID": {
          "type": "integer",
          "format": "int32"
        },
        "CustomerID": {
          "type": "integer",
          "format": "int32"
        },
        "ContractCode": {
          "type": "string"
        },
        "ContractName": {
          "type": "string"
        },
        "DateContract": {
          "type": "string",
          "format": "date-time"
        },
        "DateStart": {
          "type": "string",
          "format": "date-time"
        },
        "DateEnd": {
          "type": "string",
          "format": "date-time"
        },
        "Amount": {
          "type": "number",
          "format": "double"
        },
        "UserIDManager": {
          "type": "integer",
          "format": "int32"
        },
        "StatusID": {
          "type": "integer",
          "format": "int32"
        },
        "DayNotiContract": {
          "type": "integer",
          "format": "int32"
        },
        "DayNotiPayment": {
          "type": "integer",
          "format": "int32"
        },
        "Description": {
          "type": "string"
        },
        "DateCreated": {
          "type": "string",
          "format": "date-time"
        },
        "DateUpdated": {
          "type": "string",
          "format": "date-time"
        },
        "UserCreated": {
          "type": "string"
        },
        "UserUpdated": {
          "type": "string"
        },
        "Customers": {
          "$ref": "#/definitions/Customers"
        }
      },
      "xml": {
        "name": "Contracts"
      },
      "type": "object"
    },
    "Customers": {
      "properties": {
        "CustomerID": {
          "type": "integer",
          "format": "int32"
        },
        "CompanyID": {
          "type": "integer",
          "format": "int32"
        },
        "CustomerCode": {
          "type": "string"
        },
        "CustomerName": {
          "type": "string"
        },
        "TaxNumber": {
          "type": "string"
        },
        "Address": {
          "type": "string"
        },
        "Phone": {
          "type": "string"
        },
        "StatusID": {
          "type": "integer",
          "format": "int32"
        },
        "Description": {
          "type": "string"
        },
        "DateCreated": {
          "type": "string",
          "format": "date-time"
        },
        "DateUpdated": {
          "type": "string",
          "format": "date-time"
        },
        "UserCreated": {
          "type": "string"
        },
        "UserUpdated": {
          "type": "string"
        },
        "Contracts": {
          "items": {
            "$ref": "#/definitions/Contracts"
          },
          "xml": {
            "name": "Contracts",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "Customers"
      },
      "type": "object"
    },
    "DeliveryVehiclesSearchModel": {
      "properties": {
        "CompanyID": {
          "type": "integer",
          "format": "int32"
        },
        "NumberVehicle": {
          "type": "string"
        },
        "TypeVehicleID": {
          "type": "integer",
          "format": "int32"
        },
        "ProviderID": {
          "type": "integer",
          "format": "int32"
        },
        "Page": {
          "type": "integer",
          "format": "int32"
        },
        "PageSize": {
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "DeliveryVehiclesSearchModel"
      },
      "type": "object"
    },
    "DeliveryVehiclesCreateModel": {
      "properties": {
        "CompanyID": {
          "type": "integer",
          "format": "int32"
        },
        "NumberVehicle": {
          "type": "string"
        },
        "TypeVehicleID": {
          "type": "integer",
          "format": "int32"
        },
        "ProviderID": {
          "type": "integer",
          "format": "int32"
        },
        "NumberContainer": {
          "type": "number",
          "format": "double"
        },
        "Description": {
          "type": "string"
        }
      },
      "xml": {
        "name": "DeliveryVehiclesCreateModel"
      },
      "type": "object"
    },
    "DeliveryVehiclesUpdateModel": {
      "properties": {
        "DeliveryVehicleID": {
          "type": "integer",
          "format": "int32"
        },
        "NumberVehicle": {
          "type": "string"
        },
        "TypeVehicleID": {
          "type": "integer",
          "format": "int32"
        },
        "ProviderID": {
          "type": "integer",
          "format": "int32"
        },
        "NumberContainer": {
          "type": "number",
          "format": "double"
        },
        "Description": {
          "type": "string"
        }
      },
      "xml": {
        "name": "DeliveryVehiclesUpdateModel"
      },
      "type": "object"
    },
    "DepartmentModel": {
      "properties": {
        "DepartmentID": {
          "type": "integer",
          "format": "int32"
        },
        "CompanyID": {
          "type": "integer",
          "format": "int32"
        },
        "DepartmentName": {
          "type": "string"
        },
        "DepartmentDescription": {
          "type": "string"
        },
        "ParentDepartmentID": {
          "type": "integer",
          "format": "int32"
        },
        "IsRootDepartment": {
          "type": "boolean"
        },
        "StatusID": {
          "type": "integer",
          "format": "int32"
        },
        "DateCreated": {
          "type": "string",
          "format": "date-time"
        },
        "DateUpdated": {
          "type": "string",
          "format": "date-time"
        },
        "UserCreated": {
          "type": "string"
        },
        "UserUpdated": {
          "type": "string"
        }
      },
      "xml": {
        "name": "DepartmentModel"
      },
      "type": "object"
    },
    "DispatchDocumentCommentModelCreate": {
      "properties": {
        "ContentComment": {
          "type": "string"
        },
        "IsPinned": {
          "type": "boolean"
        }
      },
      "xml": {
        "name": "DispatchDocumentCommentModelCreate"
      },
      "type": "object"
    },
    "DispatchDocumentModelCreate": {
      "properties": {
        "DispatchDocumentGroup": {
          "type": "integer",
          "format": "int32"
        },
        "DispatchDocumentType": {
          "type": "integer",
          "format": "int32"
        },
        "StatusID": {
          "type": "integer",
          "format": "int32"
        },
        "DispatchDocumentName": {
          "type": "string"
        },
        "DispatchDocumentNumber": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "CustomerName": {
          "type": "string"
        },
        "Resources": {
          "type": "string"
        },
        "CustomerDescription": {
          "type": "string"
        },
        "TimeStart": {
          "type": "string",
          "format": "date-time"
        },
        "TimeEnd": {
          "type": "string",
          "format": "date-time"
        },
        "StorageLocation": {
          "type": "string"
        },
        "DateReceived": {
          "type": "string",
          "format": "date-time"
        },
        "DateCompleted": {
          "type": "string",
          "format": "date-time"
        },
        "StaffReceiveID": {
          "type": "integer",
          "format": "int32"
        },
        "StaffSignatureID": {
          "type": "integer",
          "format": "int32"
        },
        "StaffProcessID": {
          "type": "integer",
          "format": "int32"
        },
        "StaffReferenceID": {
          "type": "integer",
          "format": "int32"
        },
        "DeadlineProcess": {
          "type": "string",
          "format": "date-time"
        }
      },
      "xml": {
        "name": "DispatchDocumentModelCreate"
      },
      "type": "object"
    },
    "DispatchDocumentDetailModelUpdate": {
      "properties": {
        "DispatchDocumentType": {
          "type": "integer",
          "format": "int32"
        },
        "DispatchDocumentName": {
          "type": "string"
        },
        "DispatchDocumentNumber": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "CustomerName": {
          "type": "string"
        },
        "Resources": {
          "type": "string"
        },
        "CustomerDescription": {
          "type": "string"
        },
        "TimeStart": {
          "type": "string",
          "format": "date-time"
        },
        "TimeEnd": {
          "type": "string",
          "format": "date-time"
        },
        "StorageLocation": {
          "type": "string"
        },
        "DateReceived": {
          "type": "string",
          "format": "date-time"
        },
        "DateCompleted": {
          "type": "string",
          "format": "date-time"
        },
        "StaffReceiveID": {
          "type": "integer",
          "format": "int32"
        },
        "StaffSignatureID": {
          "type": "integer",
          "format": "int32"
        },
        "StaffProcessID": {
          "type": "integer",
          "format": "int32"
        },
        "StaffReferenceID": {
          "type": "integer",
          "format": "int32"
        },
        "DeadlineProcess": {
          "type": "string",
          "format": "date-time"
        }
      },
      "xml": {
        "name": "DispatchDocumentDetailModelUpdate"
      },
      "type": "object"
    },
    "DispatchDocumentStatusModelUpdate": {
      "properties": {
        "StatusID": {
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "DispatchDocumentStatusModelUpdate"
      },
      "type": "object"
    },
    "DispatchDocumentAssignsCreate": {
      "properties": {
        "DispatchDocumentID": {
          "type": "integer",
          "format": "int32"
        },
        "UserCreateID": {
          "type": "integer",
          "format": "int32"
        },
        "ListPeopleSignature": {
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "type": "array"
        },
        "ListPeopleProcessor": {
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "DispatchDocumentAssignsCreate"
      },
      "type": "object"
    },
    "DriverFoldersModel": {
      "properties": {
        "FolderID": {
          "type": "integer",
          "format": "int32"
        },
        "ParentID": {
          "type": "integer",
          "format": "int32"
        },
        "DriveID": {
          "type": "integer",
          "format": "int32"
        },
        "FolderName": {
          "type": "string"
        },
        "FolderDescription": {
          "type": "string"
        },
        "StatusID": {
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "DriverFoldersModel"
      },
      "type": "object"
    },
    "DriverFileFoldersModel": {
      "properties": {
        "FileFolderID": {
          "type": "integer",
          "format": "int32"
        },
        "DriveID": {
          "type": "integer",
          "format": "int32"
        },
        "FolderID": {
          "type": "integer",
          "format": "int32"
        },
        "FileSize": {
          "type": "integer",
          "format": "int64"
        },
        "FileID": {
          "type": "integer",
          "format": "int32"
        },
        "FileName": {
          "type": "string"
        },
        "FileMimeType": {
          "type": "string"
        },
        "FilePublicPath": {
          "type": "string"
        },
        "StatusID": {
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "DriverFileFoldersModel"
      },
      "type": "object"
    },
    "DriverFolderChildrenItem": {
      "properties": {
        "ItemID": {
          "type": "integer",
          "format": "int32"
        },
        "ItemType": {
          "type": "integer",
          "format": "int32"
        },
        "ItemName": {
          "type": "string"
        },
        "FolderPath": {
          "type": "string"
        },
        "ItemSize": {
          "type": "integer",
          "format": "int64"
        },
        "MimeType": {
          "type": "string"
        },
        "PublicPath": {
          "type": "string"
        },
        "UserCreated": {
          "type": "string"
        },
        "UserUpdated": {
          "type": "string"
        },
        "DateCreated": {
          "type": "string",
          "format": "date-time"
        },
        "DateUpdated": {
          "type": "string",
          "format": "date-time"
        }
      },
      "xml": {
        "name": "DriverFolderChildrenItem"
      },
      "type": "object"
    },
    "CreateExportTrackingBillModel": {
      "properties": {
        "ExportTrackingBillID": {
          "type": "integer",
          "format": "int32"
        },
        "ProjectIDFrom": {
          "type": "integer",
          "format": "int32"
        },
        "ProjectIDTo": {
          "type": "integer",
          "format": "int32"
        },
        "TypeTrackingBillID": {
          "type": "integer",
          "format": "int32"
        },
        "NameDriver": {
          "type": "string"
        },
        "CCCD": {
          "type": "string"
        },
        "LicensePlate": {
          "type": "string"
        },
        "UnitID": {
          "type": "integer",
          "format": "int32"
        },
        "Amount": {
          "type": "integer",
          "format": "int32"
        },
        "Description": {
          "type": "string"
        },
        "ImageExport1": {
          "type": "string"
        },
        "ImageExport2": {
          "type": "string"
        },
        "ImageExport3": {
          "type": "string"
        },
        "ImageSign": {
          "type": "string"
        },
        "IsCheck": {
          "type": "boolean"
        },
        "IsApprove": {
          "type": "boolean"
        }
      },
      "xml": {
        "name": "CreateExportTrackingBillModel"
      },
      "type": "object"
    },
    "UpdateExportTrackingBillModel": {
      "properties": {
        "ExportTrackingBillID": {
          "type": "integer",
          "format": "int32"
        },
        "ProjectIDFrom": {
          "type": "integer",
          "format": "int32"
        },
        "ProjectIDTo": {
          "type": "integer",
          "format": "int32"
        },
        "TypeTrackingBillID": {
          "type": "integer",
          "format": "int32"
        },
        "NameDriver": {
          "type": "string"
        },
        "CCCD": {
          "type": "string"
        },
        "LicensePlate": {
          "type": "string"
        },
        "UnitID": {
          "type": "integer",
          "format": "int32"
        },
        "Amount": {
          "type": "integer",
          "format": "int32"
        },
        "Description": {
          "type": "string"
        },
        "ImageExport1": {
          "type": "string"
        },
        "ImageExport2": {
          "type": "string"
        },
        "ImageExport3": {
          "type": "string"
        },
        "ImageSign": {
          "type": "string"
        },
        "IsCheck": {
          "type": "boolean"
        },
        "IsApprove": {
          "type": "boolean"
        }
      },
      "xml": {
        "name": "UpdateExportTrackingBillModel"
      },
      "type": "object"
    },
    "MemberInGroupUpdateBody": {
      "properties": {
        "ListItems": {
          "items": {
            "$ref": "#/definitions/MemberInGroupModel"
          },
          "xml": {
            "name": "MemberInGroupModel",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "MemberInGroupUpdateBody"
      },
      "type": "object"
    },
    "MemberInGroupModel": {
      "properties": {
        "StaffID": {
          "type": "integer",
          "format": "int32"
        },
        "StaffCode": {
          "type": "string"
        },
        "Email": {
          "type": "string"
        },
        "FullName": {
          "type": "string"
        },
        "ImagesPath": {
          "type": "string"
        },
        "AccessAllowed": {
          "type": "boolean"
        },
        "GroupID": {
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "MemberInGroupModel"
      },
      "type": "object"
    },
    "GroupModels": {
      "properties": {
        "GroupID": {
          "type": "integer",
          "format": "int32"
        },
        "CompanyID": {
          "type": "integer",
          "format": "int32"
        },
        "GroupName": {
          "type": "string"
        },
        "GroupDescription": {
          "type": "string"
        },
        "StatusID": {
          "type": "integer",
          "format": "int32"
        },
        "MemberCounts": {
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "GroupModels"
      },
      "type": "object"
    },
    "GroupStaffModels": {
      "properties": {
        "GroupStaffID": {
          "type": "integer",
          "format": "int32"
        },
        "GroupID": {
          "type": "integer",
          "format": "int32"
        },
        "StaffID": {
          "type": "integer",
          "format": "int32"
        },
        "StatusID": {
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "GroupStaffModels"
      },
      "type": "object"
    },
    "GroupEmailModelCreate": {
      "properties": {
        "GroupEmailName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "EmailValues": {
          "type": "string"
        }
      },
      "xml": {
        "name": "GroupEmailModelCreate"
      },
      "type": "object"
    },
    "GroupEmailModelUpdate": {
      "properties": {
        "GroupEmailName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "EmailValues": {
          "type": "string"
        }
      },
      "xml": {
        "name": "GroupEmailModelUpdate"
      },
      "type": "object"
    },
    "NotificationModel": {
      "properties": {
        "NotificationID": {
          "type": "integer",
          "format": "int64"
        },
        "State": {
          "type": "string"
        },
        "ServiceID": {
          "type": "integer",
          "format": "int32"
        },
        "ServiceName": {
          "type": "string"
        },
        "ActionUrl": {
          "type": "string"
        },
        "SenderID": {
          "type": "integer",
          "format": "int32"
        },
        "ReceiverID": {
          "type": "integer",
          "format": "int32"
        },
        "CompanyID": {
          "type": "integer",
          "format": "int32"
        },
        "DepartmentID": {
          "type": "integer",
          "format": "int32"
        },
        "Title": {
          "type": "string"
        },
        "Message": {
          "type": "string"
        },
        "DateCreated": {
          "type": "string",
          "format": "date-time"
        },
        "DateUpdated": {
          "type": "string",
          "format": "date-time"
        },
        "ServiceIconName": {
          "type": "string"
        },
        "SenderFullName": {
          "type": "string"
        },
        "SenderAvatar": {
          "type": "string"
        }
      },
      "xml": {
        "name": "NotificationModel"
      },
      "type": "object"
    },
    "PolicyPermissionUpdateModel": {
      "properties": {
        "ListItems": {
          "items": {
            "$ref": "#/definitions/PolicyPermissionItem"
          },
          "xml": {
            "name": "PolicyPermissionItem",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "PolicyPermissionUpdateModel"
      },
      "type": "object"
    },
    "PolicyPermissionItem": {
      "properties": {
        "PolicyModuleID": {
          "type": "integer",
          "format": "int32"
        },
        "AccessAllowed": {
          "type": "boolean"
        },
        "StaffID": {
          "type": "integer",
          "format": "int32"
        },
        "GroupID": {
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "PolicyPermissionItem"
      },
      "type": "object"
    },
    "PositionModel": {
      "properties": {
        "PositionID": {
          "type": "integer",
          "format": "int32"
        },
        "CompanyID": {
          "type": "integer",
          "format": "int32"
        },
        "PositionName": {
          "type": "string"
        },
        "PositionDescription": {
          "type": "string"
        },
        "UserCreated": {
          "type": "string"
        },
        "UserUpdated": {
          "type": "string"
        },
        "DateCreated": {
          "type": "string",
          "format": "date-time"
        },
        "DateUpdated": {
          "type": "string",
          "format": "date-time"
        },
        "StatusID": {
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "PositionModel"
      },
      "type": "object"
    },
    "ProjectsSearchModel": {
      "properties": {
        "ProjectName": {
          "type": "string"
        },
        "Address": {
          "type": "string"
        },
        "Page": {
          "type": "integer",
          "format": "int32"
        },
        "PageSize": {
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "ProjectsSearchModel"
      },
      "type": "object"
    },
    "ProjectsCreateModel": {
      "properties": {
        "ProjectName": {
          "type": "string"
        },
        "Address": {
          "type": "string"
        }
      },
      "xml": {
        "name": "ProjectsCreateModel"
      },
      "type": "object"
    },
    "ProjectsUpdateModel": {
      "properties": {
        "ProjectID": {
          "type": "integer",
          "format": "int32"
        },
        "ProjectName": {
          "type": "string"
        },
        "Address": {
          "type": "string"
        }
      },
      "xml": {
        "name": "ProjectsUpdateModel"
      },
      "type": "object"
    },
    "ProviderVehiclesSearchModel": {
      "properties": {
        "ProviderName": {
          "type": "string"
        },
        "Phone": {
          "type": "string"
        },
        "Email": {
          "type": "string"
        },
        "TaxCode": {
          "type": "string"
        },
        "ContactPerson": {
          "type": "string"
        },
        "PhoneContact": {
          "type": "string"
        },
        "Page": {
          "type": "integer",
          "format": "int32"
        },
        "PageSize": {
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "ProviderVehiclesSearchModel"
      },
      "type": "object"
    },
    "ProviderVehiclesCreateModel": {
      "properties": {
        "ProviderName": {
          "type": "string"
        },
        "Address": {
          "type": "string"
        },
        "Phone": {
          "type": "string"
        },
        "Email": {
          "type": "string"
        },
        "TaxCode": {
          "type": "string"
        },
        "ContactPerson": {
          "type": "string"
        },
        "PhoneContact": {
          "type": "string"
        }
      },
      "xml": {
        "name": "ProviderVehiclesCreateModel"
      },
      "type": "object"
    },
    "ProviderVehiclesUpdateModel": {
      "properties": {
        "ProviderID": {
          "type": "integer",
          "format": "int32"
        },
        "ProviderName": {
          "type": "string"
        },
        "Address": {
          "type": "string"
        },
        "Phone": {
          "type": "string"
        },
        "Email": {
          "type": "string"
        },
        "TaxCode": {
          "type": "string"
        },
        "ContactPerson": {
          "type": "string"
        },
        "PhoneContact": {
          "type": "string"
        }
      },
      "xml": {
        "name": "ProviderVehiclesUpdateModel"
      },
      "type": "object"
    },
    "RequestForwardModel": {
      "properties": {
        "ForwardID": {
          "type": "integer",
          "format": "int32"
        },
        "ProcessID": {
          "type": "integer",
          "format": "int32"
        },
        "UserForwardID": {
          "type": "integer",
          "format": "int32"
        },
        "UserReceiveID": {
          "type": "integer",
          "format": "int32"
        },
        "UserReferenceID": {
          "type": "integer",
          "format": "int32"
        },
        "StatusID": {
          "type": "integer",
          "format": "int32"
        },
        "DateCreate": {
          "type": "string",
          "format": "date-time"
        },
        "UserCreate": {
          "type": "string"
        }
      },
      "xml": {
        "name": "RequestForwardModel"
      },
      "type": "object"
    },
    "RequestProcessModel": {
      "properties": {
        "ProcessID": {
          "type": "integer",
          "format": "int32"
        },
        "Title": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "StatusID": {
          "type": "integer",
          "format": "int32"
        },
        "PriorityID": {
          "type": "integer",
          "format": "int32"
        },
        "DepartmentUserPostID": {
          "type": "integer",
          "format": "int32"
        },
        "DepartmentUserPostName": {
          "type": "string"
        },
        "UserPostID": {
          "type": "integer",
          "format": "int32"
        },
        "UserPostName": {
          "type": "string"
        },
        "DepartmentUserAssignID": {
          "type": "integer",
          "format": "int32"
        },
        "DepartmentUserAssignName": {
          "type": "string"
        },
        "UserAssignID": {
          "type": "integer",
          "format": "int32"
        },
        "UserAssignName": {
          "type": "string"
        },
        "DepartmentUserReferenceID": {
          "type": "integer",
          "format": "int32"
        },
        "DepartmentUserReferenceName": {
          "type": "string"
        },
        "UserReferenceID": {
          "type": "integer",
          "format": "int32"
        },
        "UserReferenceName": {
          "type": "string"
        },
        "PercentProcess": {
          "type": "integer",
          "format": "int32"
        },
        "DepartmentUserForwardID": {
          "type": "integer",
          "format": "int32"
        },
        "DepartmentUserForwardName": {
          "type": "string"
        },
        "UserForwardID": {
          "type": "integer",
          "format": "int32"
        },
        "UserForwardName": {
          "type": "string"
        },
        "DatePost": {
          "type": "string",
          "format": "date-time"
        },
        "DateComplete": {
          "type": "string",
          "format": "date-time"
        },
        "DateCreated": {
          "type": "string",
          "format": "date-time"
        },
        "listStaffIDsCompany": {
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "RequestProcessModel"
      },
      "type": "object"
    },
    "StaffDetailsModel": {
      "properties": {
        "StaffCode": {
          "type": "string"
        },
        "CustomerID": {
          "type": "integer",
          "format": "int32"
        },
        "UserManagerID": {
          "type": "integer",
          "format": "int32"
        },
        "CompanyID": {
          "type": "integer",
          "format": "int32"
        },
        "CompanyName": {
          "type": "string"
        },
        "Email": {
          "type": "string"
        },
        "Phone": {
          "type": "string"
        },
        "Passwords": {
          "type": "string"
        },
        "FullName": {
          "type": "string"
        },
        "ImagesPath": {
          "type": "string"
        },
        "IsPrimaryStaffInfo": {
          "type": "boolean"
        },
        "IsRequestApprove": {
          "type": "integer",
          "format": "int32"
        },
        "ManagerInfoID": {
          "type": "integer",
          "format": "int32"
        },
        "UserTypeID": {
          "type": "integer",
          "format": "int32"
        },
        "StatusID": {
          "type": "integer",
          "format": "int32"
        },
        "DepartmentID": {
          "type": "integer",
          "format": "int32"
        },
        "PositionID": {
          "type": "integer",
          "format": "int32"
        },
        "LevelID": {
          "type": "integer",
          "format": "int32"
        },
        "IdentityCard": {
          "type": "string"
        },
        "AreaIdentity": {
          "type": "string"
        },
        "GenderID": {
          "type": "integer",
          "format": "int32"
        },
        "Birthday": {
          "type": "string",
          "format": "date-time"
        },
        "CountryID": {
          "type": "integer",
          "format": "int32"
        },
        "LevelSpecialize": {
          "type": "string"
        },
        "ForeignLanguageID": {
          "type": "integer",
          "format": "int32"
        },
        "ComputerLevelID": {
          "type": "integer",
          "format": "int32"
        },
        "NationID": {
          "type": "integer",
          "format": "int32"
        },
        "ReligionID": {
          "type": "integer",
          "format": "int32"
        },
        "AddressLive": {
          "type": "string"
        },
        "AddressBorn": {
          "type": "string"
        },
        "Job": {
          "type": "string"
        },
        "DateJob": {
          "type": "string",
          "format": "date-time"
        },
        "NumberSocialInsurance": {
          "type": "string"
        },
        "NumberHealthInsurance": {
          "type": "string"
        },
        "CodeAreaHealthcare": {
          "type": "string"
        },
        "AreaHealthcare": {
          "type": "string"
        },
        "Tel": {
          "type": "string"
        },
        "Extension": {
          "type": "string"
        },
        "InformationFamily": {
          "type": "string"
        },
        "CodeIncomeTax": {
          "type": "string"
        },
        "UserStaffDescription": {
          "type": "string"
        },
        "AddressWorkID": {
          "type": "integer",
          "format": "int32"
        },
        "LearningPowerID": {
          "type": "integer",
          "format": "int32"
        },
        "NameBank": {
          "type": "string"
        },
        "AccountBank": {
          "type": "string"
        },
        "PlaceBorn": {
          "type": "string"
        },
        "ReasionOff": {
          "type": "string"
        },
        "IncreasedDateCoverage": {
          "type": "string",
          "format": "date-time"
        },
        "DecreasedDateCoverage": {
          "type": "string",
          "format": "date-time"
        },
        "DateIdenttity": {
          "type": "string",
          "format": "date-time"
        },
        "DateOff": {
          "type": "string",
          "format": "date-time"
        },
        "ResionWork": {
          "type": "string"
        },
        "ConcurrentStaffInfos": {
          "items": {
            "$ref": "#/definitions/ConcurrentStaffInfoModel"
          },
          "xml": {
            "name": "ConcurrentStaffInfoModel",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "StaffDetailsModel"
      },
      "type": "object"
    },
    "ConcurrentStaffInfoModel": {
      "properties": {
        "StaffInfoID": {
          "type": "integer",
          "format": "int32"
        },
        "ImagesPath": {
          "type": "string"
        },
        "IsRequestApprove": {
          "type": "integer",
          "format": "int32"
        },
        "DepartmentID": {
          "type": "integer",
          "format": "int32"
        },
        "DepartmentName": {
          "type": "string"
        },
        "PositionID": {
          "type": "integer",
          "format": "int32"
        },
        "PositionName": {
          "type": "string"
        },
        "IsPrimaryStaffInfo": {
          "type": "boolean"
        },
        "ManagerInfoID": {
          "type": "integer",
          "format": "int32"
        },
        "ManagerName": {
          "type": "string"
        }
      },
      "xml": {
        "name": "ConcurrentStaffInfoModel"
      },
      "type": "object"
    },
    "GroupOfMemberUpdateBody": {
      "properties": {
        "ListItems": {
          "items": {
            "$ref": "#/definitions/GroupOfMemberModel"
          },
          "xml": {
            "name": "GroupOfMemberModel",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "GroupOfMemberUpdateBody"
      },
      "type": "object"
    },
    "GroupOfMemberModel": {
      "properties": {
        "GroupID": {
          "type": "integer",
          "format": "int32"
        },
        "GroupName": {
          "type": "string"
        },
        "GroupDescription": {
          "type": "string"
        },
        "AccessAllowed": {
          "type": "boolean"
        },
        "StaffID": {
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "GroupOfMemberModel"
      },
      "type": "object"
    },
    "StaffInfoModelUpdate": {
      "properties": {
        "FullName": {
          "type": "string"
        },
        "CustomerID": {
          "type": "integer",
          "format": "int32"
        },
        "UserManagerID": {
          "type": "integer",
          "format": "int32"
        },
        "PositionID": {
          "type": "integer",
          "format": "int32"
        },
        "Birthday": {
          "type": "string",
          "format": "date-time"
        },
        "DateJob": {
          "type": "string",
          "format": "date-time"
        },
        "IsRequestApprove": {
          "type": "integer",
          "format": "int32"
        },
        "Email": {
          "type": "string"
        },
        "Phone": {
          "type": "string"
        },
        "Extension": {
          "type": "string"
        },
        "UserStaffDescription": {
          "type": "string"
        },
        "ImagesPath": {
          "type": "string"
        },
        "StatusID": {
          "type": "integer",
          "format": "int32"
        },
        "DateOff": {
          "type": "string",
          "format": "date-time"
        },
        "ReasionOff": {
          "type": "string"
        },
        "GenderID": {
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "StaffInfoModelUpdate"
      },
      "type": "object"
    },
    "ToDoListModelCreate": {
      "properties": {
        "Title": {
          "type": "string"
        },
        "CategoryNewsID": {
          "type": "integer",
          "format": "int32"
        },
        "ContractID": {
          "type": "integer",
          "format": "int32"
        },
        "TimeStart": {
          "type": "string",
          "format": "date-time"
        },
        "TimeEnd": {
          "type": "string",
          "format": "date-time"
        },
        "ColorCode": {
          "type": "string"
        },
        "Amount": {
          "type": "number",
          "format": "double"
        }
      },
      "xml": {
        "name": "ToDoListModelCreate"
      },
      "type": "object"
    },
    "ToDoListModelCloneCreate": {
      "properties": {
        "Title": {
          "type": "string"
        },
        "CategoryNewsID": {
          "type": "integer",
          "format": "int32"
        },
        "TimeStart": {
          "type": "string",
          "format": "date-time"
        },
        "TimeEnd": {
          "type": "string",
          "format": "date-time"
        },
        "ColorCode": {
          "type": "string"
        },
        "Amount": {
          "type": "number",
          "format": "double"
        }
      },
      "xml": {
        "name": "ToDoListModelCloneCreate"
      },
      "type": "object"
    },
    "ToDoListModelUpdate": {
      "properties": {
        "Title": {
          "type": "string"
        },
        "CategoryNewsID": {
          "type": "integer",
          "format": "int32"
        },
        "ContractID": {
          "type": "integer",
          "format": "int32"
        },
        "TimeStart": {
          "type": "string",
          "format": "date-time"
        },
        "TimeEnd": {
          "type": "string",
          "format": "date-time"
        },
        "ColorCode": {
          "type": "string"
        },
        "Amount": {
          "type": "number",
          "format": "double"
        },
        "Assigns": {
          "items": {
            "$ref": "#/definitions/ToDoListAssignModelClone"
          },
          "xml": {
            "name": "ToDoListAssignModelClone",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "ToDoListModelUpdate"
      },
      "type": "object"
    },
    "ToDoListAssignModelClone": {
      "properties": {
        "StaffAssignID": {
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "ToDoListAssignModelClone"
      },
      "type": "object"
    },
    "ToDoListDescriptionModel": {
      "properties": {
        "Description": {
          "type": "string"
        }
      },
      "xml": {
        "name": "ToDoListDescriptionModel"
      },
      "type": "object"
    },
    "ToDoListTemplateModelCreate": {
      "properties": {
        "TemplateName": {
          "type": "string"
        },
        "TemplateDescription": {
          "type": "string"
        }
      },
      "xml": {
        "name": "ToDoListTemplateModelCreate"
      },
      "type": "object"
    },
    "ToDoListTemplateModelUpdate": {
      "properties": {
        "TemplateName": {
          "type": "string"
        },
        "TemplateDescription": {
          "type": "string"
        }
      },
      "xml": {
        "name": "ToDoListTemplateModelUpdate"
      },
      "type": "object"
    },
    "ToDoListAssignModelCreate": {
      "properties": {
        "StaffAssignID": {
          "type": "integer",
          "format": "int32"
        },
        "StaffAssignName": {
          "type": "string"
        },
        "StaffAssignAvatar": {
          "type": "string"
        },
        "StatusID": {
          "type": "integer",
          "format": "int32"
        },
        "ProductInChargeID": {
          "type": "integer",
          "format": "int32"
        },
        "IsConfirmed": {
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "ToDoListAssignModelCreate"
      },
      "type": "object"
    },
    "ToDoListsAttachmentsModelCreate": {
      "properties": {
        "ServiceID": {
          "type": "integer",
          "format": "int32"
        },
        "ItemID": {
          "type": "integer",
          "format": "int32"
        },
        "ItemName": {
          "type": "string"
        },
        "ItemUrl": {
          "type": "string"
        }
      },
      "xml": {
        "name": "ToDoListsAttachmentsModelCreate"
      },
      "type": "object"
    },
    "ToDoListCommentModelCreate": {
      "properties": {
        "ContentComment": {
          "type": "string"
        }
      },
      "xml": {
        "name": "ToDoListCommentModelCreate"
      },
      "type": "object"
    },
    "ToDoListMilestoneLinkModelCreate": {
      "properties": {
        "SourceMilestonesID": {
          "type": "integer",
          "format": "int32"
        },
        "TargetMilestonesID": {
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "ToDoListMilestoneLinkModelCreate"
      },
      "type": "object"
    },
    "ToDoListMilestoneLinkModelUpdate": {
      "properties": {
        "SourceMilestonesID": {
          "type": "integer",
          "format": "int32"
        },
        "TargetMilestonesID": {
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "ToDoListMilestoneLinkModelUpdate"
      },
      "type": "object"
    },
    "ToDoListMilestoneModelCreate": {
      "properties": {
        "Title": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "StatusID": {
          "type": "integer",
          "format": "int32"
        },
        "ProgressValue": {
          "type": "integer",
          "format": "int32"
        },
        "StaffAssignID": {
          "type": "integer",
          "format": "int32"
        },
        "TimeStart": {
          "type": "string",
          "format": "date-time"
        },
        "TimeEnd": {
          "type": "string",
          "format": "date-time"
        },
        "Amount": {
          "type": "number",
          "format": "double"
        },
        "Links": {
          "items": {
            "$ref": "#/definitions/ToDoListMilestoneLinkModelCreate"
          },
          "xml": {
            "name": "ToDoListMilestoneLinkModelCreate",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "ToDoListMilestoneModelCreate"
      },
      "type": "object"
    },
    "ToDoListMilestoneModelUpdate": {
      "properties": {
        "Title": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "ProgressValue": {
          "type": "integer",
          "format": "int32"
        },
        "StatusID": {
          "type": "integer",
          "format": "int32"
        },
        "StaffAssignID": {
          "type": "integer",
          "format": "int32"
        },
        "TimeStart": {
          "type": "string",
          "format": "date-time"
        },
        "TimeEnd": {
          "type": "string",
          "format": "date-time"
        },
        "Amount": {
          "type": "number",
          "format": "double"
        }
      },
      "xml": {
        "name": "ToDoListMilestoneModelUpdate"
      },
      "type": "object"
    },
    "ToDoListsReferencesModels": {
      "properties": {
        "ToDoListsID": {
          "type": "integer",
          "format": "int32"
        },
        "StaffAssignID": {
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "type": "array"
        },
        "StatusID": {
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "ToDoListsReferencesModels"
      },
      "type": "object"
    },
    "ListToDoListsReferences": {
      "properties": {
        "ListPeopleReferences": {
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "ListToDoListsReferences"
      },
      "type": "object"
    },
    "CreateTrackingBillModel": {
      "properties": {
        "TrackingBillID": {
          "type": "integer",
          "format": "int32"
        },
        "TypeTrackingBillID": {
          "type": "integer",
          "format": "int32"
        },
        "ProjectID": {
          "type": "integer",
          "format": "int32"
        },
        "DeliveryVehicleID": {
          "type": "integer",
          "format": "int32"
        },
        "CompanyID": {
          "type": "integer",
          "format": "int32"
        },
        "TitleBill": {
          "type": "string"
        },
        "DateBill": {
          "type": "string",
          "format": "date-time"
        },
        "ImageIn1": {
          "type": "string"
        },
        "ImageIn2": {
          "type": "string"
        },
        "ImageIn3": {
          "type": "string"
        },
        "ImageOut1": {
          "type": "string"
        },
        "ImageOut2": {
          "type": "string"
        },
        "ImageOut3": {
          "type": "string"
        },
        "FileReceive": {
          "type": "string"
        },
        "Amount": {
          "type": "number",
          "format": "double"
        },
        "IsError": {
          "type": "boolean"
        },
        "ViolationRuleID": {
          "type": "integer",
          "format": "int32"
        },
        "HandlingPlanID": {
          "type": "integer",
          "format": "int32"
        },
        "Violate": {
          "type": "number",
          "format": "double"
        },
        "IsCheck": {
          "type": "boolean"
        },
        "Approve": {
          "type": "boolean"
        }
      },
      "xml": {
        "name": "CreateTrackingBillModel"
      },
      "type": "object"
    },
    "UpdateTrackingBillModel": {
      "properties": {
        "TypeTrackingBillID": {
          "type": "integer",
          "format": "int32"
        },
        "ProjectID": {
          "type": "integer",
          "format": "int32"
        },
        "DeliveryVehicleID": {
          "type": "integer",
          "format": "int32"
        },
        "CompanyID": {
          "type": "integer",
          "format": "int32"
        },
        "TitleBill": {
          "type": "string"
        },
        "DateBill": {
          "type": "string",
          "format": "date-time"
        },
        "ImageIn1": {
          "type": "string"
        },
        "ImageIn2": {
          "type": "string"
        },
        "ImageIn3": {
          "type": "string"
        },
        "ImageOut1": {
          "type": "string"
        },
        "ImageOut2": {
          "type": "string"
        },
        "ImageOut3": {
          "type": "string"
        },
        "FileReceive": {
          "type": "string"
        },
        "Amount": {
          "type": "number",
          "format": "double"
        },
        "IsError": {
          "type": "boolean"
        },
        "ViolationRuleID": {
          "type": "integer",
          "format": "int32"
        },
        "HandlingPlanID": {
          "type": "integer",
          "format": "int32"
        },
        "Violate": {
          "type": "number",
          "format": "double"
        },
        "IsCheck": {
          "type": "boolean"
        },
        "Approve": {
          "type": "boolean"
        }
      },
      "xml": {
        "name": "UpdateTrackingBillModel"
      },
      "type": "object"
    },
    "IncomeTransactionModelCreate": {
      "properties": {
        "ToDoListID": {
          "type": "integer",
          "format": "int32"
        },
        "ProductID": {
          "type": "integer",
          "format": "int32"
        },
        "TransactionName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "Amount": {
          "type": "number",
          "format": "double"
        }
      },
      "xml": {
        "name": "IncomeTransactionModelCreate"
      },
      "type": "object"
    },
    "ExpenseTransactionModelCreate": {
      "properties": {
        "ToDoListID": {
          "type": "integer",
          "format": "int32"
        },
        "TransactionGroupID": {
          "type": "integer",
          "format": "int32"
        },
        "ProductID": {
          "type": "integer",
          "format": "int32"
        },
        "TransactionName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "Amount": {
          "type": "number",
          "format": "double"
        }
      },
      "xml": {
        "name": "ExpenseTransactionModelCreate"
      },
      "type": "object"
    },
    "IncomeTransactionModelUpdate": {
      "properties": {
        "ToDoListID": {
          "type": "integer",
          "format": "int32"
        },
        "ProductID": {
          "type": "integer",
          "format": "int32"
        },
        "TransactionName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "Amount": {
          "type": "number",
          "format": "double"
        }
      },
      "xml": {
        "name": "IncomeTransactionModelUpdate"
      },
      "type": "object"
    },
    "ExpenseTransactionModelUpdate": {
      "properties": {
        "ToDoListID": {
          "type": "integer",
          "format": "int32"
        },
        "TransactionGroupID": {
          "type": "integer",
          "format": "int32"
        },
        "ProductID": {
          "type": "integer",
          "format": "int32"
        },
        "TransactionName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "Amount": {
          "type": "number",
          "format": "double"
        }
      },
      "xml": {
        "name": "ExpenseTransactionModelUpdate"
      },
      "type": "object"
    },
    "TransactionGroupModelCreate": {
      "properties": {
        "Name": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      },
      "xml": {
        "name": "TransactionGroupModelCreate"
      },
      "type": "object"
    },
    "TransactionGroupModelUpdate": {
      "properties": {
        "Name": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      },
      "xml": {
        "name": "TransactionGroupModelUpdate"
      },
      "type": "object"
    },
    "CreateTypeTrackingBillModel": {
      "properties": {
        "TypeTrackingBillID": {
          "type": "integer",
          "format": "int32"
        },
        "CompanyID": {
          "type": "integer",
          "format": "int32"
        },
        "TypeName": {
          "type": "string"
        }
      },
      "xml": {
        "name": "CreateTypeTrackingBillModel"
      },
      "type": "object"
    },
    "UpdateTypeTrackingBillModel": {
      "properties": {
        "TypeName": {
          "type": "string"
        }
      },
      "xml": {
        "name": "UpdateTypeTrackingBillModel"
      },
      "type": "object"
    },
    "TypeVehiclesSearchModel": {
      "properties": {
        "TypeName": {
          "type": "string"
        },
        "Page": {
          "type": "integer",
          "format": "int32"
        },
        "PageSize": {
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "TypeVehiclesSearchModel"
      },
      "type": "object"
    },
    "TypeVehiclesCreateModel": {
      "properties": {
        "TypeName": {
          "type": "string"
        }
      },
      "xml": {
        "name": "TypeVehiclesCreateModel"
      },
      "type": "object"
    },
    "TypeVehiclesUpdateModel": {
      "properties": {
        "TypeVehicleID": {
          "type": "integer",
          "format": "int32"
        },
        "TypeName": {
          "type": "string"
        }
      },
      "xml": {
        "name": "TypeVehiclesUpdateModel"
      },
      "type": "object"
    },
    "TypeWorkFlowModel": {
      "properties": {
        "TypeWorkFlowID": {
          "type": "integer",
          "format": "int32"
        },
        "CompanyID": {
          "type": "integer",
          "format": "int32"
        },
        "TypeWorkFlowName": {
          "type": "string"
        },
        "IsDetailList": {
          "type": "integer",
          "format": "int32"
        },
        "TypeWorkFlowDescription": {
          "type": "string"
        },
        "IsFollowOrgChart": {
          "type": "boolean"
        },
        "ListUserApproves": {
          "items": {
            "$ref": "#/definitions/WorkFlowConfigModel"
          },
          "xml": {
            "name": "WorkFlowConfigModel",
            "wrapped": true
          },
          "type": "array"
        },
        "FieldCustomFirst": {
          "type": "string"
        },
        "FieldDetails": {
          "type": "string"
        },
        "FieldCustomAfter": {
          "type": "string"
        },
        "StatusID": {
          "type": "integer",
          "format": "int32"
        },
        "DateFrom": {
          "type": "string",
          "format": "date-time"
        },
        "DateTo": {
          "type": "string",
          "format": "date-time"
        },
        "DateCreated": {
          "type": "string"
        },
        "UserCreated": {
          "type": "string"
        },
        "UserUpdated": {
          "type": "string"
        },
        "DateUpdated": {
          "type": "string"
        },
        "IsPublic": {
          "type": "boolean"
        },
        "ShouldNotifyUpward": {
          "type": "boolean"
        }
      },
      "xml": {
        "name": "TypeWorkFlowModel"
      },
      "type": "object"
    },
    "WorkFlowConfigModel": {
      "properties": {
        "ConfigID": {
          "type": "integer",
          "format": "int32"
        },
        "SectionName": {
          "type": "string"
        },
        "TypeWorkFlowID": {
          "type": "integer",
          "format": "int32"
        },
        "UserApproveID": {
          "type": "integer",
          "format": "int32"
        },
        "UserApproveName": {
          "type": "string"
        },
        "DepartmentApproveID": {
          "type": "integer",
          "format": "int32"
        },
        "DepartmentApproveName": {
          "type": "string"
        },
        "StatusID": {
          "type": "integer",
          "format": "int32"
        },
        "OrderApprove": {
          "type": "integer",
          "format": "int32"
        },
        "DateCreated": {
          "type": "string"
        },
        "UserCreated": {
          "type": "string"
        },
        "UserUpdated": {
          "type": "string"
        },
        "DateUpdated": {
          "type": "string"
        }
      },
      "xml": {
        "name": "WorkFlowConfigModel"
      },
      "type": "object"
    },
    "CreateViolationRuleModel": {
      "properties": {
        "ViolationName": {
          "type": "string"
        }
      },
      "xml": {
        "name": "CreateViolationRuleModel"
      },
      "type": "object"
    },
    "UpdateViolationRuleModel": {
      "properties": {
        "ViolationName": {
          "type": "string"
        }
      },
      "xml": {
        "name": "UpdateViolationRuleModel"
      },
      "type": "object"
    },
    "WorkFlowModel": {
      "properties": {
        "WorkFlowID": {
          "type": "integer",
          "format": "int32"
        },
        "TypeWorkFlowID": {
          "type": "integer",
          "format": "int32"
        },
        "TypeWorkFlowName": {
          "type": "string"
        },
        "IsDetailList": {
          "type": "integer",
          "format": "int32"
        },
        "Title": {
          "type": "string"
        },
        "FieldDetails": {
          "type": "string"
        },
        "HasAttachmentFile": {
          "type": "boolean"
        },
        "UserRequirementID": {
          "type": "integer",
          "format": "int32"
        },
        "UserRequirementName": {
          "type": "string"
        },
        "DepartmentUserRequirement": {
          "type": "string"
        },
        "CurrentApproverID": {
          "type": "integer",
          "format": "int32"
        },
        "CurrentApproverName": {
          "type": "string"
        },
        "LastApproverID": {
          "type": "integer",
          "format": "int32"
        },
        "LastApproverName": {
          "type": "string"
        },
        "StatusID": {
          "type": "integer",
          "format": "int32"
        },
        "DateCreated": {
          "type": "string",
          "format": "date-time"
        },
        "DateUpdated": {
          "type": "string",
          "format": "date-time"
        },
        "UserCreated": {
          "type": "string"
        },
        "UserUpdated": {
          "type": "string"
        }
      },
      "xml": {
        "name": "WorkFlowModel"
      },
      "type": "object"
    },
    "WorkFlowApproveModel": {
      "properties": {
        "WorkFlowApproveID": {
          "type": "integer",
          "format": "int32"
        },
        "SectionName": {
          "type": "string"
        },
        "WorkFlowID": {
          "type": "integer",
          "format": "int32"
        },
        "UserApproveID": {
          "type": "integer",
          "format": "int32"
        },
        "UserApproveName": {
          "type": "string"
        },
        "DepartmentApproveID": {
          "type": "integer",
          "format": "int32"
        },
        "DepartmentApproveName": {
          "type": "string"
        },
        "UserForwardID": {
          "type": "integer",
          "format": "int32"
        },
        "UserForwardName": {
          "type": "string"
        },
        "DateApprove": {
          "type": "string",
          "format": "date-time"
        },
        "IsApprove": {
          "type": "integer",
          "format": "int32"
        },
        "StatusID": {
          "type": "integer",
          "format": "int32"
        },
        "DateCreated": {
          "type": "string",
          "format": "date-time"
        },
        "DateUpdated": {
          "type": "string",
          "format": "date-time"
        },
        "UserCreated": {
          "type": "string"
        },
        "UserUpdated": {
          "type": "string"
        }
      },
      "xml": {
        "name": "WorkFlowApproveModel"
      },
      "type": "object"
    }
  },
  "tags": [
    {
      "name": "Authentication"
    },
    {
      "name": "BillAdvances"
    },
    {
      "name": "BillRefunds"
    },
    {
      "name": "BookingCategory"
    },
    {
      "name": "BookingEventCategory"
    },
    {
      "name": "BookingEvents"
    },
    {
      "name": "BookingEventsAttendance"
    },
    {
      "name": "BookingTypeEvent"
    },
    {
      "name": "CMSCategoryNews"
    },
    {
      "name": "CMSContentType"
    },
    {
      "name": "CMSNews"
    },
    {
      "name": "CompanyPricePackage"
    },
    {
      "name": "Companys"
    },
    {
      "name": "CompanyService"
    },
    {
      "name": "Config"
    },
    {
      "name": "Contract"
    },
    {
      "name": "Customer"
    },
    {
      "name": "DeliveryVehicles"
    },
    {
      "name": "Department"
    },
    {
      "name": "DispatchDocument"
    },
    {
      "name": "DispatchDocumentAssigns"
    },
    {
      "name": "Driver"
    },
    {
      "name": "Email"
    },
    {
      "name": "ExportTrackingBill"
    },
    {
      "name": "Group"
    },
    {
      "name": "GroupEmail"
    },
    {
      "name": "HandlingPlan"
    },
    {
      "name": "Messaging"
    },
    {
      "name": "Policy"
    },
    {
      "name": "Position"
    },
    {
      "name": "Projects"
    },
    {
      "name": "ProviderVehicles"
    },
    {
      "name": "Report"
    },
    {
      "name": "RequestAttachment"
    },
    {
      "name": "RequestComment"
    },
    {
      "name": "RequestForward"
    },
    {
      "name": "RequestProcess"
    },
    {
      "name": "Services"
    },
    {
      "name": "Staff"
    },
    {
      "name": "ToDoList"
    },
    {
      "name": "ToDoListAssign"
    },
    {
      "name": "ToDoListAttachment"
    },
    {
      "name": "ToDoListCategory"
    },
    {
      "name": "ToDoListComment"
    },
    {
      "name": "ToDoListLink"
    },
    {
      "name": "ToDoListMilestone"
    },
    {
      "name": "ToDoListMilestoneStatistic"
    },
    {
      "name": "ToDoListsReferences"
    },
    {
      "name": "ToDoListStatistics"
    },
    {
      "name": "ToDoListTimeLine"
    },
    {
      "name": "TrackingBill"
    },
    {
      "name": "Transaction"
    },
    {
      "name": "TransactionGroup"
    },
    {
      "name": "TypeTrackingBill"
    },
    {
      "name": "TypeVehicles"
    },
    {
      "name": "TypeWorkFlow"
    },
    {
      "name": "Unit"
    },
    {
      "name": "UserTypes"
    },
    {
      "name": "ViolationRule"
    },
    {
      "name": "WorkFlow"
    }
  ]
}